<?php
/**
 * CustomerApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.3-alpha.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * CustomerApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for customersChangePasswordPost
     *
     * Change a user's password..
     *
     */
    public function testCustomersChangePasswordPost()
    {

    }

    /**
     * Test case for customersChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testCustomersChangeStreamGet()
    {

    }

    /**
     * Test case for customersChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testCustomersChangeStreamPost()
    {

    }

    /**
     * Test case for customersConfirmGet
     *
     * Confirm a user registration with identity verification token..
     *
     */
    public function testCustomersConfirmGet()
    {

    }

    /**
     * Test case for customersCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCustomersCountGet()
    {

    }

    /**
     * Test case for customersEmailEmailExistsGet
     *
     * Define whether customer exists or not.
     *
     */
    public function testCustomersEmailEmailExistsGet()
    {

    }

    /**
     * Test case for customersFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCustomersFindOneGet()
    {

    }

    /**
     * Test case for customersGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCustomersGet()
    {

    }

    /**
     * Test case for customersIdAccessTokensCountGet
     *
     * Counts accessTokens of Customer..
     *
     */
    public function testCustomersIdAccessTokensCountGet()
    {

    }

    /**
     * Test case for customersIdAccessTokensDelete
     *
     * Deletes all accessTokens of this model..
     *
     */
    public function testCustomersIdAccessTokensDelete()
    {

    }

    /**
     * Test case for customersIdAccessTokensFkDelete
     *
     * Delete a related item by id for accessTokens..
     *
     */
    public function testCustomersIdAccessTokensFkDelete()
    {

    }

    /**
     * Test case for customersIdAccessTokensFkGet
     *
     * Find a related item by id for accessTokens..
     *
     */
    public function testCustomersIdAccessTokensFkGet()
    {

    }

    /**
     * Test case for customersIdAccessTokensFkPut
     *
     * Update a related item by id for accessTokens..
     *
     */
    public function testCustomersIdAccessTokensFkPut()
    {

    }

    /**
     * Test case for customersIdAccessTokensGet
     *
     * Queries accessTokens of Customer..
     *
     */
    public function testCustomersIdAccessTokensGet()
    {

    }

    /**
     * Test case for customersIdAccessTokensPost
     *
     * Creates a new instance in accessTokens of this model..
     *
     */
    public function testCustomersIdAccessTokensPost()
    {

    }

    /**
     * Test case for customersIdActiveGet
     *
     * Define whether customer is active or not.
     *
     */
    public function testCustomersIdActiveGet()
    {

    }

    /**
     * Test case for customersIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testCustomersIdDelete()
    {

    }

    /**
     * Test case for customersIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomersIdExistsGet()
    {

    }

    /**
     * Test case for customersIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testCustomersIdGet()
    {

    }

    /**
     * Test case for customersIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomersIdHead()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsCountGet
     *
     * Counts invitationTickets of Customer..
     *
     */
    public function testCustomersIdInvitationTicketsCountGet()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsDelete
     *
     * Deletes all invitationTickets of this model..
     *
     */
    public function testCustomersIdInvitationTicketsDelete()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsFkDelete
     *
     * Delete a related item by id for invitationTickets..
     *
     */
    public function testCustomersIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsFkGet
     *
     * Find a related item by id for invitationTickets..
     *
     */
    public function testCustomersIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsFkPut
     *
     * Update a related item by id for invitationTickets..
     *
     */
    public function testCustomersIdInvitationTicketsFkPut()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsGet
     *
     * Queries invitationTickets of Customer..
     *
     */
    public function testCustomersIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for customersIdInvitationTicketsPost
     *
     * Creates a new instance in invitationTickets of this model..
     *
     */
    public function testCustomersIdInvitationTicketsPost()
    {

    }

    /**
     * Test case for customersIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomersIdPatch()
    {

    }

    /**
     * Test case for customersIdPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testCustomersIdPermissionDelete()
    {

    }

    /**
     * Test case for customersIdPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testCustomersIdPermissionGet()
    {

    }

    /**
     * Test case for customersIdPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testCustomersIdPermissionPost()
    {

    }

    /**
     * Test case for customersIdPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testCustomersIdPermissionPut()
    {

    }

    /**
     * Test case for customersIdProfilePicturePut
     *
     * Change profile picture.
     *
     */
    public function testCustomersIdProfilePicturePut()
    {

    }

    /**
     * Test case for customersIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomersIdPut()
    {

    }

    /**
     * Test case for customersIdRegisterTeamPost
     *
     * Register team and assign it to the customer.
     *
     */
    public function testCustomersIdRegisterTeamPost()
    {

    }

    /**
     * Test case for customersIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomersIdReplacePost()
    {

    }

    /**
     * Test case for customersIdTeamsCountGet
     *
     * Counts teams of Customer..
     *
     */
    public function testCustomersIdTeamsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsDelete
     *
     * Deletes all teams of this model..
     *
     */
    public function testCustomersIdTeamsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsFkDelete
     *
     * Delete a related item by id for teams..
     *
     */
    public function testCustomersIdTeamsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsFkGet
     *
     * Find a related item by id for teams..
     *
     */
    public function testCustomersIdTeamsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsFkPut
     *
     * Update a related item by id for teams..
     *
     */
    public function testCustomersIdTeamsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsGet
     *
     * Queries teams of Customer..
     *
     */
    public function testCustomersIdTeamsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkBrandDelete
     *
     * Deletes brand of this model..
     *
     */
    public function testCustomersIdTeamsNkBrandDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkBrandGet
     *
     * Fetches hasOne relation brand..
     *
     */
    public function testCustomersIdTeamsNkBrandGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkBrandPost
     *
     * Creates a new instance in brand of this model..
     *
     */
    public function testCustomersIdTeamsNkBrandPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkBrandPut
     *
     * Update brand of this model..
     *
     */
    public function testCustomersIdTeamsNkBrandPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsCountGet
     *
     * Counts builderConfigs of Team..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsDelete
     *
     * Deletes all builderConfigs of this model..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsFkDelete
     *
     * Delete a related item by id for builderConfigs..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsFkGet
     *
     * Find a related item by id for builderConfigs..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsFkPut
     *
     * Update a related item by id for builderConfigs..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsGet
     *
     * Queries builderConfigs of Team..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkBuilderConfigsPost
     *
     * Creates a new instance in builderConfigs of this model..
     *
     */
    public function testCustomersIdTeamsNkBuilderConfigsPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesCountGet
     *
     * Counts dataSources of Team..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesDelete
     *
     * Deletes all dataSources of this model..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesFkDelete
     *
     * Delete a related item by id for dataSources..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesFkGet
     *
     * Find a related item by id for dataSources..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesFkPut
     *
     * Update a related item by id for dataSources..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesGet
     *
     * Queries dataSources of Team..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDataSourcesPost
     *
     * Creates a new instance in dataSources of this model..
     *
     */
    public function testCustomersIdTeamsNkDataSourcesPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasCountGet
     *
     * Counts dynamicDatas of Team..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasDelete
     *
     * Deletes all dynamicDatas of this model..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasFkDelete
     *
     * Delete a related item by id for dynamicDatas..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasFkGet
     *
     * Find a related item by id for dynamicDatas..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasFkPut
     *
     * Update a related item by id for dynamicDatas..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasGet
     *
     * Queries dynamicDatas of Team..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkDynamicDatasPost
     *
     * Creates a new instance in dynamicDatas of this model..
     *
     */
    public function testCustomersIdTeamsNkDynamicDatasPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersCountGet
     *
     * Counts imageFolders of Team..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersGet
     *
     * Queries imageFolders of Team..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testCustomersIdTeamsNkImageFoldersPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesCountGet
     *
     * Counts images of Team..
     *
     */
    public function testCustomersIdTeamsNkImagesCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testCustomersIdTeamsNkImagesDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testCustomersIdTeamsNkImagesFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testCustomersIdTeamsNkImagesFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testCustomersIdTeamsNkImagesFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesGet
     *
     * Queries images of Team..
     *
     */
    public function testCustomersIdTeamsNkImagesGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testCustomersIdTeamsNkImagesPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersCountGet
     *
     * Counts members of Team..
     *
     */
    public function testCustomersIdTeamsNkMembersCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testCustomersIdTeamsNkMembersDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testCustomersIdTeamsNkMembersFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testCustomersIdTeamsNkMembersFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testCustomersIdTeamsNkMembersFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersGet
     *
     * Queries members of Team..
     *
     */
    public function testCustomersIdTeamsNkMembersGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testCustomersIdTeamsNkMembersPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testCustomersIdTeamsNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testCustomersIdTeamsNkMembersRelFkHead()
    {

    }

    /**
     * Test case for customersIdTeamsNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testCustomersIdTeamsNkMembersRelFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testCustomersIdTeamsNkPermissionDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testCustomersIdTeamsNkPermissionGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testCustomersIdTeamsNkPermissionPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testCustomersIdTeamsNkPermissionPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsCountGet
     *
     * Counts portals of Team..
     *
     */
    public function testCustomersIdTeamsNkPortalsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testCustomersIdTeamsNkPortalsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testCustomersIdTeamsNkPortalsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testCustomersIdTeamsNkPortalsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testCustomersIdTeamsNkPortalsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsGet
     *
     * Queries portals of Team..
     *
     */
    public function testCustomersIdTeamsNkPortalsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testCustomersIdTeamsNkPortalsPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsCountGet
     *
     * Counts productMaterials of Team..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsDelete
     *
     * Deletes all productMaterials of this model..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsFkDelete
     *
     * Delete a related item by id for productMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsFkGet
     *
     * Find a related item by id for productMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsFkPut
     *
     * Update a related item by id for productMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsGet
     *
     * Queries productMaterials of Team..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductMaterialsPost
     *
     * Creates a new instance in productMaterials of this model..
     *
     */
    public function testCustomersIdTeamsNkProductMaterialsPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsCountGet
     *
     * Counts productSizeMaterials of Team..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsDelete
     *
     * Deletes all productSizeMaterials of this model..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsFkDelete
     *
     * Delete a related item by id for productSizeMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsFkGet
     *
     * Find a related item by id for productSizeMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsFkPut
     *
     * Update a related item by id for productSizeMaterials..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsGet
     *
     * Queries productSizeMaterials of Team..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkProductSizeMaterialsPost
     *
     * Creates a new instance in productSizeMaterials of this model..
     *
     */
    public function testCustomersIdTeamsNkProductSizeMaterialsPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamDataGet
     *
     * Fetches belongsTo relation teamData..
     *
     */
    public function testCustomersIdTeamsNkTeamDataGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersCountGet
     *
     * Counts teamMembers of Team..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersDelete
     *
     * Deletes all teamMembers of this model..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersFkDelete
     *
     * Delete a related item by id for teamMembers..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersFkGet
     *
     * Find a related item by id for teamMembers..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersFkPut
     *
     * Update a related item by id for teamMembers..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersGet
     *
     * Queries teamMembers of Team..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTeamMembersPost
     *
     * Creates a new instance in teamMembers of this model..
     *
     */
    public function testCustomersIdTeamsNkTeamMembersPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersCountGet
     *
     * Counts templateFolders of Team..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersGet
     *
     * Queries templateFolders of Team..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testCustomersIdTeamsNkTemplateFoldersPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesCountGet
     *
     * Counts templates of Team..
     *
     */
    public function testCustomersIdTeamsNkTemplatesCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testCustomersIdTeamsNkTemplatesDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testCustomersIdTeamsNkTemplatesFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testCustomersIdTeamsNkTemplatesFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testCustomersIdTeamsNkTemplatesFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesGet
     *
     * Queries templates of Team..
     *
     */
    public function testCustomersIdTeamsNkTemplatesGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testCustomersIdTeamsNkTemplatesPost()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsCountGet
     *
     * Counts workflows of Team..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsCountGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsDelete
     *
     * Deletes all workflows of this model..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsFkDelete
     *
     * Delete a related item by id for workflows..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsFkGet
     *
     * Find a related item by id for workflows..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsFkGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsFkPut
     *
     * Update a related item by id for workflows..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsGet
     *
     * Queries workflows of Team..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsGet()
    {

    }

    /**
     * Test case for customersIdTeamsNkWorkflowsPost
     *
     * Creates a new instance in workflows of this model..
     *
     */
    public function testCustomersIdTeamsNkWorkflowsPost()
    {

    }

    /**
     * Test case for customersIdTeamsPost
     *
     * Creates a new instance in teams of this model..
     *
     */
    public function testCustomersIdTeamsPost()
    {

    }

    /**
     * Test case for customersIdTeamsRelFkDelete
     *
     * Remove the teams relation to an item by id..
     *
     */
    public function testCustomersIdTeamsRelFkDelete()
    {

    }

    /**
     * Test case for customersIdTeamsRelFkHead
     *
     * Check the existence of teams relation to an item by id..
     *
     */
    public function testCustomersIdTeamsRelFkHead()
    {

    }

    /**
     * Test case for customersIdTeamsRelFkPut
     *
     * Add a related item by id for teams..
     *
     */
    public function testCustomersIdTeamsRelFkPut()
    {

    }

    /**
     * Test case for customersIdTeamsTeamIdChangePost
     *
     * Move authentication to a Team.
     *
     */
    public function testCustomersIdTeamsTeamIdChangePost()
    {

    }

    /**
     * Test case for customersIdTeamsTeamIdPortalsPortalIdChangePost
     *
     * Move authentication to a Portal.
     *
     */
    public function testCustomersIdTeamsTeamIdPortalsPortalIdChangePost()
    {

    }

    /**
     * Test case for customersIdTokenGet
     *
     * Get token info.
     *
     */
    public function testCustomersIdTokenGet()
    {

    }

    /**
     * Test case for customersIdVerifyPost
     *
     * Trigger user's identity verification with configured verifyOptions.
     *
     */
    public function testCustomersIdVerifyPost()
    {

    }

    /**
     * Test case for customersInvitationTicketsTokenAcceptPost
     *
     * Accept invitation with token.
     *
     */
    public function testCustomersInvitationTicketsTokenAcceptPost()
    {

    }

    /**
     * Test case for customersInvitationTicketsTokenGet
     *
     * Get invitation details with token.
     *
     */
    public function testCustomersInvitationTicketsTokenGet()
    {

    }

    /**
     * Test case for customersLoginPost
     *
     * Login a user with username/email and password..
     *
     */
    public function testCustomersLoginPost()
    {

    }

    /**
     * Test case for customersLogoutPost
     *
     * Logout a user with access token..
     *
     */
    public function testCustomersLogoutPost()
    {

    }

    /**
     * Test case for customersMeTokenGet
     *
     * Get token info.
     *
     */
    public function testCustomersMeTokenGet()
    {

    }

    /**
     * Test case for customersMeTokenRefreshGet
     *
     * Refresh current access token.
     *
     */
    public function testCustomersMeTokenRefreshGet()
    {

    }

    /**
     * Test case for customersPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomersPatch()
    {

    }

    /**
     * Test case for customersPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCustomersPost()
    {

    }

    /**
     * Test case for customersPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomersPut()
    {

    }

    /**
     * Test case for customersRegisterPost
     *
     * Create customer and assign it to a team.
     *
     */
    public function testCustomersRegisterPost()
    {

    }

    /**
     * Test case for customersReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomersReplaceOrCreatePost()
    {

    }

    /**
     * Test case for customersResetPasswordPost
     *
     * Reset user's password via a password-reset token..
     *
     */
    public function testCustomersResetPasswordPost()
    {

    }

    /**
     * Test case for customersResetPasswordTokenGet
     *
     * Get token info for reset password token.
     *
     */
    public function testCustomersResetPasswordTokenGet()
    {

    }

    /**
     * Test case for customersResetPost
     *
     * Reset password for a user with email..
     *
     */
    public function testCustomersResetPost()
    {

    }

    /**
     * Test case for customersUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testCustomersUpdatePost()
    {

    }

    /**
     * Test case for customersUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testCustomersUpsertWithWherePost()
    {

    }

}
