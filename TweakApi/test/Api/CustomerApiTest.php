<?php
/**
 * CustomerApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * CustomerApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for customerConfirm
     *
     * Confirm a user registration with email verification token..
     *
     */
    public function testCustomerConfirm()
    {

    }

    /**
     * Test case for customerCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCustomerCount()
    {

    }

    /**
     * Test case for customerCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCustomerCreate()
    {

    }

    /**
     * Test case for customerCreateChangeStreamGetCustomersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerCreateChangeStreamGetCustomersChangeStream()
    {

    }

    /**
     * Test case for customerCreateChangeStreamPostCustomersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerCreateChangeStreamPostCustomersChangeStream()
    {

    }

    /**
     * Test case for customerDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerDeleteById()
    {

    }

    /**
     * Test case for customerExistsGetCustomersidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerExistsGetCustomersidExists()
    {

    }

    /**
     * Test case for customerExistsHeadCustomersid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerExistsHeadCustomersid()
    {

    }

    /**
     * Test case for customerFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCustomerFind()
    {

    }

    /**
     * Test case for customerFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerFindById()
    {

    }

    /**
     * Test case for customerFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCustomerFindOne()
    {

    }

    /**
     * Test case for customerLogin
     *
     * Login a user with username/email and password..
     *
     */
    public function testCustomerLogin()
    {

    }

    /**
     * Test case for customerLogout
     *
     * Logout a user with access token..
     *
     */
    public function testCustomerLogout()
    {

    }

    /**
     * Test case for customerPrototypeCountAccessTokens
     *
     * Counts accessTokens of Customer..
     *
     */
    public function testCustomerPrototypeCountAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeCountDesigns
     *
     * Counts designs of Customer..
     *
     */
    public function testCustomerPrototypeCountDesigns()
    {

    }

    /**
     * Test case for customerPrototypeCreateAccessTokens
     *
     * Creates a new instance in accessTokens of this model..
     *
     */
    public function testCustomerPrototypeCreateAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeCreateDesigns
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testCustomerPrototypeCreateDesigns()
    {

    }

    /**
     * Test case for customerPrototypeDeleteAccessTokens
     *
     * Deletes all accessTokens of this model..
     *
     */
    public function testCustomerPrototypeDeleteAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeDeleteDesigns
     *
     * Deletes all designs of this model..
     *
     */
    public function testCustomerPrototypeDeleteDesigns()
    {

    }

    /**
     * Test case for customerPrototypeDestroyByIdAccessTokens
     *
     * Delete a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeDestroyByIdAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeDestroyByIdDesigns
     *
     * Delete a related item by id for designs..
     *
     */
    public function testCustomerPrototypeDestroyByIdDesigns()
    {

    }

    /**
     * Test case for customerPrototypeFindByIdAccessTokens
     *
     * Find a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeFindByIdAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeFindByIdDesigns
     *
     * Find a related item by id for designs..
     *
     */
    public function testCustomerPrototypeFindByIdDesigns()
    {

    }

    /**
     * Test case for customerPrototypeGetAccessTokens
     *
     * Queries accessTokens of Customer..
     *
     */
    public function testCustomerPrototypeGetAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeGetDesigns
     *
     * Queries designs of Customer..
     *
     */
    public function testCustomerPrototypeGetDesigns()
    {

    }

    /**
     * Test case for customerPrototypeUpdateAttributesPatchCustomersid
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerPrototypeUpdateAttributesPatchCustomersid()
    {

    }

    /**
     * Test case for customerPrototypeUpdateAttributesPutCustomersid
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerPrototypeUpdateAttributesPutCustomersid()
    {

    }

    /**
     * Test case for customerPrototypeUpdateByIdAccessTokens
     *
     * Update a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeUpdateByIdAccessTokens()
    {

    }

    /**
     * Test case for customerPrototypeUpdateByIdDesigns
     *
     * Update a related item by id for designs..
     *
     */
    public function testCustomerPrototypeUpdateByIdDesigns()
    {

    }

    /**
     * Test case for customerReplaceById
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerReplaceById()
    {

    }

    /**
     * Test case for customerReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerReplaceOrCreate()
    {

    }

    /**
     * Test case for customerResetPassword
     *
     * Reset password for a user with email..
     *
     */
    public function testCustomerResetPassword()
    {

    }

    /**
     * Test case for customerUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testCustomerUpdateAll()
    {

    }

    /**
     * Test case for customerUpsertPatchCustomers
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerUpsertPatchCustomers()
    {

    }

    /**
     * Test case for customerUpsertPutCustomers
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerUpsertPutCustomers()
    {

    }

    /**
     * Test case for customerUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testCustomerUpsertWithWhere()
    {

    }

}
