<?php
/**
 * DataSourceKeyApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.4-alpha.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * DataSourceKeyApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DataSourceKeyApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for dataSourcesChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testDataSourcesChangeStreamGet()
    {

    }

    /**
     * Test case for dataSourcesChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testDataSourcesChangeStreamPost()
    {

    }

    /**
     * Test case for dataSourcesCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testDataSourcesCountGet()
    {

    }

    /**
     * Test case for dataSourcesFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testDataSourcesFindOneGet()
    {

    }

    /**
     * Test case for dataSourcesGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testDataSourcesGet()
    {

    }

    /**
     * Test case for dataSourcesIdDataSourceGet
     *
     * Fetches belongsTo relation dataSource..
     *
     */
    public function testDataSourcesIdDataSourceGet()
    {

    }

    /**
     * Test case for dataSourcesIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testDataSourcesIdDelete()
    {

    }

    /**
     * Test case for dataSourcesIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDataSourcesIdExistsGet()
    {

    }

    /**
     * Test case for dataSourcesIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testDataSourcesIdGet()
    {

    }

    /**
     * Test case for dataSourcesIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDataSourcesIdHead()
    {

    }

    /**
     * Test case for dataSourcesIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testDataSourcesIdPatch()
    {

    }

    /**
     * Test case for dataSourcesIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDataSourcesIdPut()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesCountGet
     *
     * Counts recordValues of DataSourceKey..
     *
     */
    public function testDataSourcesIdRecordValuesCountGet()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesDelete
     *
     * Deletes all recordValues of this model..
     *
     */
    public function testDataSourcesIdRecordValuesDelete()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesFkDelete
     *
     * Delete a related item by id for recordValues..
     *
     */
    public function testDataSourcesIdRecordValuesFkDelete()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesFkGet
     *
     * Find a related item by id for recordValues..
     *
     */
    public function testDataSourcesIdRecordValuesFkGet()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesFkPut
     *
     * Update a related item by id for recordValues..
     *
     */
    public function testDataSourcesIdRecordValuesFkPut()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesGet
     *
     * Queries recordValues of DataSourceKey..
     *
     */
    public function testDataSourcesIdRecordValuesGet()
    {

    }

    /**
     * Test case for dataSourcesIdRecordValuesPost
     *
     * Creates a new instance in recordValues of this model..
     *
     */
    public function testDataSourcesIdRecordValuesPost()
    {

    }

    /**
     * Test case for dataSourcesIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDataSourcesIdReplacePost()
    {

    }

    /**
     * Test case for dataSourcesIdTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testDataSourcesIdTeamGet()
    {

    }

    /**
     * Test case for dataSourcesPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testDataSourcesPatch()
    {

    }

    /**
     * Test case for dataSourcesPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testDataSourcesPost()
    {

    }

    /**
     * Test case for dataSourcesPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDataSourcesPut()
    {

    }

    /**
     * Test case for dataSourcesReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDataSourcesReplaceOrCreatePost()
    {

    }

    /**
     * Test case for dataSourcesUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testDataSourcesUpdatePost()
    {

    }

    /**
     * Test case for dataSourcesUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testDataSourcesUpsertWithWherePost()
    {

    }

}
