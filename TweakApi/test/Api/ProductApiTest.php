<?php
/**
 * ProductApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.3-alpha.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * ProductApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for productsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testProductsChangeStreamGet()
    {

    }

    /**
     * Test case for productsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testProductsChangeStreamPost()
    {

    }

    /**
     * Test case for productsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testProductsCountGet()
    {

    }

    /**
     * Test case for productsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testProductsFindOneGet()
    {

    }

    /**
     * Test case for productsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testProductsGet()
    {

    }

    /**
     * Test case for productsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testProductsIdDelete()
    {

    }

    /**
     * Test case for productsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductsIdExistsGet()
    {

    }

    /**
     * Test case for productsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testProductsIdGet()
    {

    }

    /**
     * Test case for productsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductsIdHead()
    {

    }

    /**
     * Test case for productsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductsIdPatch()
    {

    }

    /**
     * Test case for productsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductsIdPut()
    {

    }

    /**
     * Test case for productsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductsIdReplacePost()
    {

    }

    /**
     * Test case for productsIdSizeGet
     *
     * Fetches belongsTo relation size..
     *
     */
    public function testProductsIdSizeGet()
    {

    }

    /**
     * Test case for productsIdTagsCountGet
     *
     * Counts tags of Product..
     *
     */
    public function testProductsIdTagsCountGet()
    {

    }

    /**
     * Test case for productsIdTagsDelete
     *
     * Deletes all tags of this model..
     *
     */
    public function testProductsIdTagsDelete()
    {

    }

    /**
     * Test case for productsIdTagsFkDelete
     *
     * Delete a related item by id for tags..
     *
     */
    public function testProductsIdTagsFkDelete()
    {

    }

    /**
     * Test case for productsIdTagsFkGet
     *
     * Find a related item by id for tags..
     *
     */
    public function testProductsIdTagsFkGet()
    {

    }

    /**
     * Test case for productsIdTagsFkPut
     *
     * Update a related item by id for tags..
     *
     */
    public function testProductsIdTagsFkPut()
    {

    }

    /**
     * Test case for productsIdTagsGet
     *
     * Queries tags of Product..
     *
     */
    public function testProductsIdTagsGet()
    {

    }

    /**
     * Test case for productsIdTagsPost
     *
     * Creates a new instance in tags of this model..
     *
     */
    public function testProductsIdTagsPost()
    {

    }

    /**
     * Test case for productsIdTagsRelFkDelete
     *
     * Remove the tags relation to an item by id..
     *
     */
    public function testProductsIdTagsRelFkDelete()
    {

    }

    /**
     * Test case for productsIdTagsRelFkHead
     *
     * Check the existence of tags relation to an item by id..
     *
     */
    public function testProductsIdTagsRelFkHead()
    {

    }

    /**
     * Test case for productsIdTagsRelFkPut
     *
     * Add a related item by id for tags..
     *
     */
    public function testProductsIdTagsRelFkPut()
    {

    }

    /**
     * Test case for productsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductsPatch()
    {

    }

    /**
     * Test case for productsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testProductsPost()
    {

    }

    /**
     * Test case for productsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductsPut()
    {

    }

    /**
     * Test case for productsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for productsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testProductsUpdatePost()
    {

    }

    /**
     * Test case for productsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testProductsUpsertWithWherePost()
    {

    }

}
