<?php
/**
 * TeamMemberApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.8-alpha.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * TeamMemberApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TeamMemberApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for teamMembersChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testTeamMembersChangeStreamGet()
    {

    }

    /**
     * Test case for teamMembersChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testTeamMembersChangeStreamPost()
    {

    }

    /**
     * Test case for teamMembersCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamMembersFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testTeamMembersFindOneGet()
    {

    }

    /**
     * Test case for teamMembersGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamMembersGet()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsCountGet
     *
     * Counts assignedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdAssignedDesignsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsDelete
     *
     * Deletes all assignedDesigns of this model..
     *
     */
    public function testTeamMembersIdAssignedDesignsDelete()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsFkDelete
     *
     * Delete a related item by id for assignedDesigns..
     *
     */
    public function testTeamMembersIdAssignedDesignsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsFkGet
     *
     * Find a related item by id for assignedDesigns..
     *
     */
    public function testTeamMembersIdAssignedDesignsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsFkPut
     *
     * Update a related item by id for assignedDesigns..
     *
     */
    public function testTeamMembersIdAssignedDesignsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsGet
     *
     * Queries assignedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdAssignedDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdAssignedDesignsPost
     *
     * Creates a new instance in assignedDesigns of this model..
     *
     */
    public function testTeamMembersIdAssignedDesignsPost()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsCountGet
     *
     * Counts commentedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdCommentedDesignsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsDelete
     *
     * Deletes all commentedDesigns of this model..
     *
     */
    public function testTeamMembersIdCommentedDesignsDelete()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsFkDelete
     *
     * Delete a related item by id for commentedDesigns..
     *
     */
    public function testTeamMembersIdCommentedDesignsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsFkGet
     *
     * Find a related item by id for commentedDesigns..
     *
     */
    public function testTeamMembersIdCommentedDesignsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsFkPut
     *
     * Update a related item by id for commentedDesigns..
     *
     */
    public function testTeamMembersIdCommentedDesignsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsGet
     *
     * Queries commentedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdCommentedDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsPost
     *
     * Creates a new instance in commentedDesigns of this model..
     *
     */
    public function testTeamMembersIdCommentedDesignsPost()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsRelFkDelete
     *
     * Remove the commentedDesigns relation to an item by id..
     *
     */
    public function testTeamMembersIdCommentedDesignsRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsRelFkHead
     *
     * Check the existence of commentedDesigns relation to an item by id..
     *
     */
    public function testTeamMembersIdCommentedDesignsRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdCommentedDesignsRelFkPut
     *
     * Add a related item by id for commentedDesigns..
     *
     */
    public function testTeamMembersIdCommentedDesignsRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdCustomerGet
     *
     * Fetches belongsTo relation customer..
     *
     */
    public function testTeamMembersIdCustomerGet()
    {

    }

    /**
     * Test case for teamMembersIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testTeamMembersIdDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsCountGet
     *
     * Counts designComments of TeamMember..
     *
     */
    public function testTeamMembersIdDesignCommentsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsDelete
     *
     * Deletes all designComments of this model..
     *
     */
    public function testTeamMembersIdDesignCommentsDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsFkDelete
     *
     * Delete a related item by id for designComments..
     *
     */
    public function testTeamMembersIdDesignCommentsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsFkGet
     *
     * Find a related item by id for designComments..
     *
     */
    public function testTeamMembersIdDesignCommentsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsFkPut
     *
     * Update a related item by id for designComments..
     *
     */
    public function testTeamMembersIdDesignCommentsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsGet
     *
     * Queries designComments of TeamMember..
     *
     */
    public function testTeamMembersIdDesignCommentsGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignCommentsPost
     *
     * Creates a new instance in designComments of this model..
     *
     */
    public function testTeamMembersIdDesignCommentsPost()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersCountGet
     *
     * Counts designFolders of TeamMember..
     *
     */
    public function testTeamMembersIdDesignFoldersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersDelete
     *
     * Deletes all designFolders of this model..
     *
     */
    public function testTeamMembersIdDesignFoldersDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersFkDelete
     *
     * Delete a related item by id for designFolders..
     *
     */
    public function testTeamMembersIdDesignFoldersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersFkGet
     *
     * Find a related item by id for designFolders..
     *
     */
    public function testTeamMembersIdDesignFoldersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersFkPut
     *
     * Update a related item by id for designFolders..
     *
     */
    public function testTeamMembersIdDesignFoldersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersGet
     *
     * Queries designFolders of TeamMember..
     *
     */
    public function testTeamMembersIdDesignFoldersGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignFoldersPost
     *
     * Creates a new instance in designFolders of this model..
     *
     */
    public function testTeamMembersIdDesignFoldersPost()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesCountGet
     *
     * Counts designShares of TeamMember..
     *
     */
    public function testTeamMembersIdDesignSharesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesDelete
     *
     * Deletes all designShares of this model..
     *
     */
    public function testTeamMembersIdDesignSharesDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesFkDelete
     *
     * Delete a related item by id for designShares..
     *
     */
    public function testTeamMembersIdDesignSharesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesFkGet
     *
     * Find a related item by id for designShares..
     *
     */
    public function testTeamMembersIdDesignSharesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesFkPut
     *
     * Update a related item by id for designShares..
     *
     */
    public function testTeamMembersIdDesignSharesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesGet
     *
     * Queries designShares of TeamMember..
     *
     */
    public function testTeamMembersIdDesignSharesGet()
    {

    }

    /**
     * Test case for teamMembersIdDesignSharesPost
     *
     * Creates a new instance in designShares of this model..
     *
     */
    public function testTeamMembersIdDesignSharesPost()
    {

    }

    /**
     * Test case for teamMembersIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamMembersIdExistsGet()
    {

    }

    /**
     * Test case for teamMembersIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testTeamMembersIdGet()
    {

    }

    /**
     * Test case for teamMembersIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamMembersIdHead()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersCountGet
     *
     * Counts imageFolders of TeamMember..
     *
     */
    public function testTeamMembersIdImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamMembersIdImageFoldersDelete()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersGet
     *
     * Queries imageFolders of TeamMember..
     *
     */
    public function testTeamMembersIdImageFoldersGet()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamMembersIdImageFoldersPost()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersRelFkDelete
     *
     * Remove the imageFolders relation to an item by id..
     *
     */
    public function testTeamMembersIdImageFoldersRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersRelFkHead
     *
     * Check the existence of imageFolders relation to an item by id..
     *
     */
    public function testTeamMembersIdImageFoldersRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdImageFoldersRelFkPut
     *
     * Add a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdImageFoldersRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsCountGet
     *
     * Counts invitationTickets of TeamMember..
     *
     */
    public function testTeamMembersIdInvitationTicketsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsDelete
     *
     * Deletes all invitationTickets of this model..
     *
     */
    public function testTeamMembersIdInvitationTicketsDelete()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkDelete
     *
     * Delete a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkGet
     *
     * Find a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkPut
     *
     * Update a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsGet
     *
     * Queries invitationTickets of TeamMember..
     *
     */
    public function testTeamMembersIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsPost
     *
     * Creates a new instance in invitationTickets of this model..
     *
     */
    public function testTeamMembersIdInvitationTicketsPost()
    {

    }

    /**
     * Test case for teamMembersIdInviteInviteePost
     *
     * Invite somebody to join the team.
     *
     */
    public function testTeamMembersIdInviteInviteePost()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsCountGet
     *
     * Counts notifications of TeamMember..
     *
     */
    public function testTeamMembersIdNotificationsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsDelete
     *
     * Deletes all notifications of this model..
     *
     */
    public function testTeamMembersIdNotificationsDelete()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsFkDelete
     *
     * Delete a related item by id for notifications..
     *
     */
    public function testTeamMembersIdNotificationsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsFkGet
     *
     * Find a related item by id for notifications..
     *
     */
    public function testTeamMembersIdNotificationsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsFkPut
     *
     * Update a related item by id for notifications..
     *
     */
    public function testTeamMembersIdNotificationsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsGet
     *
     * Queries notifications of TeamMember..
     *
     */
    public function testTeamMembersIdNotificationsGet()
    {

    }

    /**
     * Test case for teamMembersIdNotificationsPost
     *
     * Creates a new instance in notifications of this model..
     *
     */
    public function testTeamMembersIdNotificationsPost()
    {

    }

    /**
     * Test case for teamMembersIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdPatch()
    {

    }

    /**
     * Test case for teamMembersIdPortalsAvailableGet
     *
     * Find all available Portals.
     *
     */
    public function testTeamMembersIdPortalsAvailableGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsCountGet
     *
     * Counts portals of TeamMember..
     *
     */
    public function testTeamMembersIdPortalsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamMembersIdPortalsDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkAvailableGet
     *
     * Find available Portal by id.
     *
     */
    public function testTeamMembersIdPortalsFkAvailableGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkLogoPut
     *
     * Change Portal logo.
     *
     */
    public function testTeamMembersIdPortalsFkLogoPut()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdPortalsGet
     *
     * Queries portals of TeamMember..
     *
     */
    public function testTeamMembersIdPortalsGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsNkDesignsFkFlashvarsGet
     *
     * Find Design FlashVars within available Portal by id.
     *
     */
    public function testTeamMembersIdPortalsNkDesignsFkFlashvarsGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsNkTemplatesFkFlashvarsGet
     *
     * Find Template FlashVars within available Portal by id.
     *
     */
    public function testTeamMembersIdPortalsNkTemplatesFkFlashvarsGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamMembersIdPortalsPost()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testTeamMembersIdPortalsRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testTeamMembersIdPortalsRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdPut()
    {

    }

    /**
     * Test case for teamMembersIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdReplacePost()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsCountGet
     *
     * Counts requestedDesignExports of TeamMember..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsDelete
     *
     * Deletes all requestedDesignExports of this model..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsDelete()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsFkDelete
     *
     * Delete a related item by id for requestedDesignExports..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsFkGet
     *
     * Find a related item by id for requestedDesignExports..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsFkPut
     *
     * Update a related item by id for requestedDesignExports..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsGet
     *
     * Queries requestedDesignExports of TeamMember..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignExportsPost
     *
     * Creates a new instance in requestedDesignExports of this model..
     *
     */
    public function testTeamMembersIdRequestedDesignExportsPost()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsCountGet
     *
     * Counts requestedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdRequestedDesignsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsDelete
     *
     * Deletes all requestedDesigns of this model..
     *
     */
    public function testTeamMembersIdRequestedDesignsDelete()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsFkDelete
     *
     * Delete a related item by id for requestedDesigns..
     *
     */
    public function testTeamMembersIdRequestedDesignsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsFkGet
     *
     * Find a related item by id for requestedDesigns..
     *
     */
    public function testTeamMembersIdRequestedDesignsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsFkPut
     *
     * Update a related item by id for requestedDesigns..
     *
     */
    public function testTeamMembersIdRequestedDesignsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsGet
     *
     * Queries requestedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdRequestedDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdRequestedDesignsPost
     *
     * Creates a new instance in requestedDesigns of this model..
     *
     */
    public function testTeamMembersIdRequestedDesignsPost()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsCountGet
     *
     * Counts reviewedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdReviewedDesignsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsDelete
     *
     * Deletes all reviewedDesigns of this model..
     *
     */
    public function testTeamMembersIdReviewedDesignsDelete()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsFkDelete
     *
     * Delete a related item by id for reviewedDesigns..
     *
     */
    public function testTeamMembersIdReviewedDesignsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsFkGet
     *
     * Find a related item by id for reviewedDesigns..
     *
     */
    public function testTeamMembersIdReviewedDesignsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsFkPut
     *
     * Update a related item by id for reviewedDesigns..
     *
     */
    public function testTeamMembersIdReviewedDesignsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsGet
     *
     * Queries reviewedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdReviewedDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdReviewedDesignsPost
     *
     * Creates a new instance in reviewedDesigns of this model..
     *
     */
    public function testTeamMembersIdReviewedDesignsPost()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsCountGet
     *
     * Counts sharedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdSharedDesignsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsDelete
     *
     * Deletes all sharedDesigns of this model..
     *
     */
    public function testTeamMembersIdSharedDesignsDelete()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsFkDelete
     *
     * Delete a related item by id for sharedDesigns..
     *
     */
    public function testTeamMembersIdSharedDesignsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsFkGet
     *
     * Find a related item by id for sharedDesigns..
     *
     */
    public function testTeamMembersIdSharedDesignsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsFkPut
     *
     * Update a related item by id for sharedDesigns..
     *
     */
    public function testTeamMembersIdSharedDesignsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsGet
     *
     * Queries sharedDesigns of TeamMember..
     *
     */
    public function testTeamMembersIdSharedDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsPost
     *
     * Creates a new instance in sharedDesigns of this model..
     *
     */
    public function testTeamMembersIdSharedDesignsPost()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsRelFkDelete
     *
     * Remove the sharedDesigns relation to an item by id..
     *
     */
    public function testTeamMembersIdSharedDesignsRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsRelFkHead
     *
     * Check the existence of sharedDesigns relation to an item by id..
     *
     */
    public function testTeamMembersIdSharedDesignsRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdSharedDesignsRelFkPut
     *
     * Add a related item by id for sharedDesigns..
     *
     */
    public function testTeamMembersIdSharedDesignsRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTargetModelTargetIdInviteInviteePost
     *
     * Invite somebody to join a team, portal or other targets.
     *
     */
    public function testTeamMembersIdTargetModelTargetIdInviteInviteePost()
    {

    }

    /**
     * Test case for teamMembersIdTargetModelTargetIdInvitePost
     *
     * Invite a group of people to join a team, portal or other targets.
     *
     */
    public function testTeamMembersIdTargetModelTargetIdInvitePost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingAvailablePlansGet
     *
     * Get Available Plans.
     *
     */
    public function testTeamMembersIdTeamBillingAvailablePlansGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingBankAccountDelete
     *
     * Delete Team Billing BankAccount.
     *
     */
    public function testTeamMembersIdTeamBillingBankAccountDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingBankAccountPost
     *
     * Create Team Billing BankAccount.
     *
     */
    public function testTeamMembersIdTeamBillingBankAccountPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingBankAccountPut
     *
     * Update Team Billing BankAccount.
     *
     */
    public function testTeamMembersIdTeamBillingBankAccountPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingBankAccountVerifyPost
     *
     * Create Team Billing BankAccount.
     *
     */
    public function testTeamMembersIdTeamBillingBankAccountVerifyPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingCachedGet
     *
     * Get Cached version of Team Billing.
     *
     */
    public function testTeamMembersIdTeamBillingCachedGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingCardDelete
     *
     * Delete Team Billing Card.
     *
     */
    public function testTeamMembersIdTeamBillingCardDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingCardPost
     *
     * Create Team Billing Card.
     *
     */
    public function testTeamMembersIdTeamBillingCardPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingCardPut
     *
     * Update Team Billing Card.
     *
     */
    public function testTeamMembersIdTeamBillingCardPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingInvoicesFkPost
     *
     * Pay Team Billing Invoice.
     *
     */
    public function testTeamMembersIdTeamBillingInvoicesFkPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingInvoicesGet
     *
     * List Team Billing Invoices.
     *
     */
    public function testTeamMembersIdTeamBillingInvoicesGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingInvoicesUpcomingGet
     *
     * List Upcoming Team Billing Invoices.
     *
     */
    public function testTeamMembersIdTeamBillingInvoicesUpcomingGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingLimitLimitIncreasePost
     *
     * Increase Team Billing Limit by Limit.
     *
     */
    public function testTeamMembersIdTeamBillingLimitLimitIncreasePost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingLimitLimitIncreaseValueGet
     *
     * Check if Team Billing Limit can be increased by Limit.
     *
     */
    public function testTeamMembersIdTeamBillingLimitLimitIncreaseValueGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingPut
     *
     * Update Team Billing.
     *
     */
    public function testTeamMembersIdTeamBillingPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingSourceDelete
     *
     * Delete Team Billing Source.
     *
     */
    public function testTeamMembersIdTeamBillingSourceDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingSourcePost
     *
     * Create Team Billing Source.
     *
     */
    public function testTeamMembersIdTeamBillingSourcePost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingSourcePut
     *
     * Update Team Billing Source.
     *
     */
    public function testTeamMembersIdTeamBillingSourcePut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingSubscriptionPlanPut
     *
     * Update Team Billing Subscription Plan.
     *
     */
    public function testTeamMembersIdTeamBillingSubscriptionPlanPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingTaxEvidenceGet
     *
     * Get Team Billing Tax Evidence.
     *
     */
    public function testTeamMembersIdTeamBillingTaxEvidenceGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBillingUncachedGet
     *
     * Get Team Billing.
     *
     */
    public function testTeamMembersIdTeamBillingUncachedGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBrandDelete
     *
     * Deletes brand of this model..
     *
     */
    public function testTeamMembersIdTeamBrandDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBrandGet
     *
     * Fetches hasOne relation brand..
     *
     */
    public function testTeamMembersIdTeamBrandGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBrandPost
     *
     * Creates a new instance in brand of this model..
     *
     */
    public function testTeamMembersIdTeamBrandPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamBrandPut
     *
     * Update brand of this model..
     *
     */
    public function testTeamMembersIdTeamBrandPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsCountGet
     *
     * Counts builderConfigs of Team..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsDefaultGet
     *
     * Get default Team Builder Config.
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsDefaultGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsDefaultProductSizeMaterialGet
     *
     * Get default Team Builder Config Product Size Materials.
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsDefaultProductSizeMaterialGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsDelete
     *
     * Deletes all builderConfigs of this model..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsFkDelete
     *
     * Delete a related item by id for builderConfigs..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsFkGet
     *
     * Find a related item by id for builderConfigs..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsFkLogoPut
     *
     * Change Builder Config logo.
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsFkLogoPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsFkPut
     *
     * Update a related item by id for builderConfigs..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsFkWatermarkPut
     *
     * Change Builder Config watermark.
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsFkWatermarkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsGet
     *
     * Queries builderConfigs of Team..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamBuilderConfigsPost
     *
     * Creates a new instance in builderConfigs of this model..
     *
     */
    public function testTeamMembersIdTeamBuilderConfigsPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamDataRecordGet
     *
     * Get TeamData Record.
     *
     */
    public function testTeamMembersIdTeamDataRecordGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamDataRecordPost
     *
     * Create TeamData Record.
     *
     */
    public function testTeamMembersIdTeamDataRecordPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamDataRecordPut
     *
     * Update TeamData Record.
     *
     */
    public function testTeamMembersIdTeamDataRecordPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasCountGet
     *
     * Counts dynamicDatas of Team..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasDelete
     *
     * Deletes all dynamicDatas of this model..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasFkDelete
     *
     * Delete a related item by id for dynamicDatas..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasFkGet
     *
     * Find a related item by id for dynamicDatas..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasFkPut
     *
     * Update a related item by id for dynamicDatas..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasGet
     *
     * Queries dynamicDatas of Team..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamDynamicDatasPost
     *
     * Creates a new instance in dynamicDatas of this model..
     *
     */
    public function testTeamMembersIdTeamDynamicDatasPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamMembersIdTeamGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersCountGet
     *
     * Counts imageFolders of Team..
     *
     */
    public function testTeamMembersIdTeamImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamMembersIdTeamImageFoldersDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdTeamImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdTeamImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamMembersIdTeamImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersGet
     *
     * Queries imageFolders of Team..
     *
     */
    public function testTeamMembersIdTeamImageFoldersGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamMembersIdTeamImageFoldersPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesCountGet
     *
     * Counts images of Team..
     *
     */
    public function testTeamMembersIdTeamImagesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testTeamMembersIdTeamImagesDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testTeamMembersIdTeamImagesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testTeamMembersIdTeamImagesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testTeamMembersIdTeamImagesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesGet
     *
     * Queries images of Team..
     *
     */
    public function testTeamMembersIdTeamImagesGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testTeamMembersIdTeamImagesPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamLogoPut
     *
     * Change Team logo.
     *
     */
    public function testTeamMembersIdTeamLogoPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersCountGet
     *
     * Counts members of Team..
     *
     */
    public function testTeamMembersIdTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamMembersIdTeamMembersDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamMembersIdTeamMembersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamMembersIdTeamMembersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamMembersIdTeamMembersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersGet
     *
     * Queries members of Team..
     *
     */
    public function testTeamMembersIdTeamMembersGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamMembersIdTeamMembersPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamMembersIdTeamMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamMembersIdTeamMembersRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdTeamMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamMembersIdTeamMembersRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testTeamMembersIdTeamPermissionDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testTeamMembersIdTeamPermissionGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testTeamMembersIdTeamPermissionPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testTeamMembersIdTeamPermissionPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsCountGet
     *
     * Counts portals of Team..
     *
     */
    public function testTeamMembersIdTeamPortalsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamMembersIdTeamPortalsDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamMembersIdTeamPortalsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamMembersIdTeamPortalsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamMembersIdTeamPortalsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsGet
     *
     * Queries portals of Team..
     *
     */
    public function testTeamMembersIdTeamPortalsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamMembersIdTeamPortalsPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsCountGet
     *
     * Counts productMaterials of Team..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsDelete
     *
     * Deletes all productMaterials of this model..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsFkDelete
     *
     * Delete a related item by id for productMaterials..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsFkGet
     *
     * Find a related item by id for productMaterials..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsFkPut
     *
     * Update a related item by id for productMaterials..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsGet
     *
     * Queries productMaterials of Team..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductMaterialsPost
     *
     * Creates a new instance in productMaterials of this model..
     *
     */
    public function testTeamMembersIdTeamProductMaterialsPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesAvailableGet
     *
     * Find all available PdfColorProfile.
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesAvailableGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesCountGet
     *
     * Counts productPdfColorProfiles of Team..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesDelete
     *
     * Deletes all productPdfColorProfiles of this model..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesFkDelete
     *
     * Delete a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesFkGet
     *
     * Find a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesFkPut
     *
     * Update a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesGet
     *
     * Queries productPdfColorProfiles of Team..
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductPdfColorProfilesUploadPost
     *
     * Upload ICC PDF Color Profile for this Team.
     *
     */
    public function testTeamMembersIdTeamProductPdfColorProfilesUploadPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsCountGet
     *
     * Counts productSizeMaterials of Team..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsDelete
     *
     * Deletes all productSizeMaterials of this model..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsFkDelete
     *
     * Delete a related item by id for productSizeMaterials..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsFkGet
     *
     * Find a related item by id for productSizeMaterials..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsFkPut
     *
     * Update a related item by id for productSizeMaterials..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsGet
     *
     * Queries productSizeMaterials of Team..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamProductSizeMaterialsPost
     *
     * Creates a new instance in productSizeMaterials of this model..
     *
     */
    public function testTeamMembersIdTeamProductSizeMaterialsPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamDataGet
     *
     * Fetches belongsTo relation teamData..
     *
     */
    public function testTeamMembersIdTeamTeamDataGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersCountGet
     *
     * Counts teamMembers of Team..
     *
     */
    public function testTeamMembersIdTeamTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersDelete
     *
     * Deletes all teamMembers of this model..
     *
     */
    public function testTeamMembersIdTeamTeamMembersDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersFkDelete
     *
     * Delete a related item by id for teamMembers..
     *
     */
    public function testTeamMembersIdTeamTeamMembersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersFkGet
     *
     * Find a related item by id for teamMembers..
     *
     */
    public function testTeamMembersIdTeamTeamMembersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersFkPut
     *
     * Update a related item by id for teamMembers..
     *
     */
    public function testTeamMembersIdTeamTeamMembersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersGet
     *
     * Queries teamMembers of Team..
     *
     */
    public function testTeamMembersIdTeamTeamMembersGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTeamMembersPost
     *
     * Creates a new instance in teamMembers of this model..
     *
     */
    public function testTeamMembersIdTeamTeamMembersPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersCountGet
     *
     * Counts templateFolders of Team..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersGet
     *
     * Queries templateFolders of Team..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testTeamMembersIdTeamTemplateFoldersPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesCountGet
     *
     * Counts templates of Team..
     *
     */
    public function testTeamMembersIdTeamTemplatesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamMembersIdTeamTemplatesDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamMembersIdTeamTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamMembersIdTeamTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamMembersIdTeamTemplatesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesFkUrlReviewGet
     *
     * Get URL to review a Team Template.
     *
     */
    public function testTeamMembersIdTeamTemplatesFkUrlReviewGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesGet
     *
     * Queries templates of Team..
     *
     */
    public function testTeamMembersIdTeamTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamMembersIdTeamTemplatesPost()
    {

    }

    /**
     * Test case for teamMembersIdTeamTemplatesWithDesignsGet
     *
     * List Templates with Designs for the Team of TeamMember.
     *
     */
    public function testTeamMembersIdTeamTemplatesWithDesignsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsCountGet
     *
     * Counts workflows of Team..
     *
     */
    public function testTeamMembersIdTeamWorkflowsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsDelete
     *
     * Deletes all workflows of this model..
     *
     */
    public function testTeamMembersIdTeamWorkflowsDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsFkDelete
     *
     * Delete a related item by id for workflows..
     *
     */
    public function testTeamMembersIdTeamWorkflowsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsFkGet
     *
     * Find a related item by id for workflows..
     *
     */
    public function testTeamMembersIdTeamWorkflowsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsFkPut
     *
     * Update a related item by id for workflows..
     *
     */
    public function testTeamMembersIdTeamWorkflowsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsGet
     *
     * Queries workflows of Team..
     *
     */
    public function testTeamMembersIdTeamWorkflowsGet()
    {

    }

    /**
     * Test case for teamMembersIdTeamWorkflowsPost
     *
     * Creates a new instance in workflows of this model..
     *
     */
    public function testTeamMembersIdTeamWorkflowsPost()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesCountGet
     *
     * Counts templates of TeamMember..
     *
     */
    public function testTeamMembersIdTemplatesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamMembersIdTemplatesDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkFlashvarsGet
     *
     * Find Template FlashVars by id.
     *
     */
    public function testTeamMembersIdTemplatesFkFlashvarsGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesGet
     *
     * Queries templates of TeamMember..
     *
     */
    public function testTeamMembersIdTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamMembersIdTemplatesPost()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkDelete
     *
     * Remove the templates relation to an item by id..
     *
     */
    public function testTeamMembersIdTemplatesRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkHead
     *
     * Check the existence of templates relation to an item by id..
     *
     */
    public function testTeamMembersIdTemplatesRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkPut
     *
     * Add a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplateFoldersGet
     *
     * List Tweak Templates Folders.
     *
     */
    public function testTeamMembersIdTweakTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplateFoldersNkGet
     *
     * Get Tweak Templates Folders details.
     *
     */
    public function testTeamMembersIdTweakTemplateFoldersNkGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplateFoldersNkTemplatesFkGet
     *
     * Get Tweak Template details within a Tweak Template Folder.
     *
     */
    public function testTeamMembersIdTweakTemplateFoldersNkTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplateFoldersNkTemplatesGet
     *
     * List Tweak Templates within a Tweak Template Folder.
     *
     */
    public function testTeamMembersIdTweakTemplateFoldersNkTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplatesFkFlashvarsGet
     *
     * Find Template FlashVars by id.
     *
     */
    public function testTeamMembersIdTweakTemplatesFkFlashvarsGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplatesFkGet
     *
     * Get Tweak Template details.
     *
     */
    public function testTeamMembersIdTweakTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTweakTemplatesGet
     *
     * List Tweak Templates.
     *
     */
    public function testTeamMembersIdTweakTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesCountGet
     *
     * Counts uploadedTemplates of TeamMember..
     *
     */
    public function testTeamMembersIdUploadedTemplatesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesDelete
     *
     * Deletes all uploadedTemplates of this model..
     *
     */
    public function testTeamMembersIdUploadedTemplatesDelete()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkDelete
     *
     * Delete a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkGet
     *
     * Find a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkPut
     *
     * Update a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesGet
     *
     * Queries uploadedTemplates of TeamMember..
     *
     */
    public function testTeamMembersIdUploadedTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesPost
     *
     * Creates a new instance in uploadedTemplates of this model..
     *
     */
    public function testTeamMembersIdUploadedTemplatesPost()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsCountGet
     *
     * Counts workflows of TeamMember..
     *
     */
    public function testTeamMembersIdWorkflowsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsDelete
     *
     * Deletes all workflows of this model..
     *
     */
    public function testTeamMembersIdWorkflowsDelete()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsFkDelete
     *
     * Delete a related item by id for workflows..
     *
     */
    public function testTeamMembersIdWorkflowsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsFkGet
     *
     * Find a related item by id for workflows..
     *
     */
    public function testTeamMembersIdWorkflowsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsFkPut
     *
     * Update a related item by id for workflows..
     *
     */
    public function testTeamMembersIdWorkflowsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsGet
     *
     * Queries workflows of TeamMember..
     *
     */
    public function testTeamMembersIdWorkflowsGet()
    {

    }

    /**
     * Test case for teamMembersIdWorkflowsPost
     *
     * Creates a new instance in workflows of this model..
     *
     */
    public function testTeamMembersIdWorkflowsPost()
    {

    }

    /**
     * Test case for teamMembersPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersPatch()
    {

    }

    /**
     * Test case for teamMembersPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamMembersPost()
    {

    }

    /**
     * Test case for teamMembersPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersPut()
    {

    }

    /**
     * Test case for teamMembersReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersReplaceOrCreatePost()
    {

    }

    /**
     * Test case for teamMembersUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testTeamMembersUpdatePost()
    {

    }

    /**
     * Test case for teamMembersUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testTeamMembersUpsertWithWherePost()
    {

    }

}
