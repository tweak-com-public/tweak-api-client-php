<?php
/**
 * TeamMemberApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * TeamMemberApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TeamMemberApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for teamMembersChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testTeamMembersChangeStreamGet()
    {

    }

    /**
     * Test case for teamMembersChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testTeamMembersChangeStreamPost()
    {

    }

    /**
     * Test case for teamMembersCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamMembersFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testTeamMembersFindOneGet()
    {

    }

    /**
     * Test case for teamMembersGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamMembersGet()
    {

    }

    /**
     * Test case for teamMembersIdCustomerGet
     *
     * Fetches belongsTo relation customer..
     *
     */
    public function testTeamMembersIdCustomerGet()
    {

    }

    /**
     * Test case for teamMembersIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testTeamMembersIdDelete()
    {

    }

    /**
     * Test case for teamMembersIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamMembersIdExistsGet()
    {

    }

    /**
     * Test case for teamMembersIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testTeamMembersIdGet()
    {

    }

    /**
     * Test case for teamMembersIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamMembersIdHead()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsCountGet
     *
     * Counts invitationTickets of TeamMember..
     *
     */
    public function testTeamMembersIdInvitationTicketsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsDelete
     *
     * Deletes all invitationTickets of this model..
     *
     */
    public function testTeamMembersIdInvitationTicketsDelete()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkDelete
     *
     * Delete a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkGet
     *
     * Find a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsFkPut
     *
     * Update a related item by id for invitationTickets..
     *
     */
    public function testTeamMembersIdInvitationTicketsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsGet
     *
     * Queries invitationTickets of TeamMember..
     *
     */
    public function testTeamMembersIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for teamMembersIdInvitationTicketsPost
     *
     * Creates a new instance in invitationTickets of this model..
     *
     */
    public function testTeamMembersIdInvitationTicketsPost()
    {

    }

    /**
     * Test case for teamMembersIdInviteInviteePost
     *
     * Invite somebody to join the team.
     *
     */
    public function testTeamMembersIdInviteInviteePost()
    {

    }

    /**
     * Test case for teamMembersIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdPatch()
    {

    }

    /**
     * Test case for teamMembersIdPortalsCountGet
     *
     * Counts portals of TeamMember..
     *
     */
    public function testTeamMembersIdPortalsCountGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamMembersIdPortalsDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsFkPut()
    {

    }

    /**
     * Test case for teamMembersIdPortalsGet
     *
     * Queries portals of TeamMember..
     *
     */
    public function testTeamMembersIdPortalsGet()
    {

    }

    /**
     * Test case for teamMembersIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamMembersIdPortalsPost()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testTeamMembersIdPortalsRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testTeamMembersIdPortalsRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testTeamMembersIdPortalsRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdPut()
    {

    }

    /**
     * Test case for teamMembersIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamMembersIdReplacePost()
    {

    }

    /**
     * Test case for teamMembersIdTargetModelTargetIdInviteInviteePost
     *
     * Invite somebody to join a team, portal or other targets.
     *
     */
    public function testTeamMembersIdTargetModelTargetIdInviteInviteePost()
    {

    }

    /**
     * Test case for teamMembersIdTargetModelTargetIdInvitePost
     *
     * Invite a group of people to join a team, portal or other targets.
     *
     */
    public function testTeamMembersIdTargetModelTargetIdInvitePost()
    {

    }

    /**
     * Test case for teamMembersIdTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamMembersIdTeamGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesCountGet
     *
     * Counts templates of TeamMember..
     *
     */
    public function testTeamMembersIdTemplatesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamMembersIdTemplatesDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesGet
     *
     * Queries templates of TeamMember..
     *
     */
    public function testTeamMembersIdTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamMembersIdTemplatesPost()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkDelete
     *
     * Remove the templates relation to an item by id..
     *
     */
    public function testTeamMembersIdTemplatesRelFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkHead
     *
     * Check the existence of templates relation to an item by id..
     *
     */
    public function testTeamMembersIdTemplatesRelFkHead()
    {

    }

    /**
     * Test case for teamMembersIdTemplatesRelFkPut
     *
     * Add a related item by id for templates..
     *
     */
    public function testTeamMembersIdTemplatesRelFkPut()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesCountGet
     *
     * Counts uploadedTemplates of TeamMember..
     *
     */
    public function testTeamMembersIdUploadedTemplatesCountGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesDelete
     *
     * Deletes all uploadedTemplates of this model..
     *
     */
    public function testTeamMembersIdUploadedTemplatesDelete()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkDelete
     *
     * Delete a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkGet
     *
     * Find a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesFkPut
     *
     * Update a related item by id for uploadedTemplates..
     *
     */
    public function testTeamMembersIdUploadedTemplatesFkPut()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesGet
     *
     * Queries uploadedTemplates of TeamMember..
     *
     */
    public function testTeamMembersIdUploadedTemplatesGet()
    {

    }

    /**
     * Test case for teamMembersIdUploadedTemplatesPost
     *
     * Creates a new instance in uploadedTemplates of this model..
     *
     */
    public function testTeamMembersIdUploadedTemplatesPost()
    {

    }

    /**
     * Test case for teamMembersPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersPatch()
    {

    }

    /**
     * Test case for teamMembersPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamMembersPost()
    {

    }

    /**
     * Test case for teamMembersPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersPut()
    {

    }

    /**
     * Test case for teamMembersReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamMembersReplaceOrCreatePost()
    {

    }

    /**
     * Test case for teamMembersUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testTeamMembersUpdatePost()
    {

    }

    /**
     * Test case for teamMembersUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testTeamMembersUpsertWithWherePost()
    {

    }

}
