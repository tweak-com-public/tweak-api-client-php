<?php
/**
 * TeamBuilderConfigApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.6-beta.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * TeamBuilderConfigApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TeamBuilderConfigApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for teamBuilderConfigsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testTeamBuilderConfigsChangeStreamGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testTeamBuilderConfigsChangeStreamPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testTeamBuilderConfigsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testTeamBuilderConfigsFindOneGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamBuilderConfigsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testTeamBuilderConfigsIdDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamBuilderConfigsIdExistsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testTeamBuilderConfigsIdGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamBuilderConfigsIdHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamBuilderConfigsIdPatch()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsCountGet
     *
     * Counts portals of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdPortalsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamBuilderConfigsIdPortalsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamBuilderConfigsIdPortalsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamBuilderConfigsIdPortalsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamBuilderConfigsIdPortalsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsGet
     *
     * Queries portals of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdPortalsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamBuilderConfigsIdPortalsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsCountGet
     *
     * Counts productGroups of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsDelete
     *
     * Deletes all productGroups of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsFkDelete
     *
     * Delete a related item by id for productGroups..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsFkGet
     *
     * Find a related item by id for productGroups..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsFkPut
     *
     * Update a related item by id for productGroups..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsGet
     *
     * Queries productGroups of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesCountGet
     *
     * Counts types of ProductGroup..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesDelete
     *
     * Deletes all types of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesFkDelete
     *
     * Delete a related item by id for types..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesFkGet
     *
     * Find a related item by id for types..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesFkPut
     *
     * Update a related item by id for types..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesGet
     *
     * Queries types of ProductGroup..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsNkTypesPost
     *
     * Creates a new instance in types of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsNkTypesPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsPost
     *
     * Creates a new instance in productGroups of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsRelFkDelete
     *
     * Remove the productGroups relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsRelFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsRelFkHead
     *
     * Check the existence of productGroups relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsRelFkHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductGroupsRelFkPut
     *
     * Add a related item by id for productGroups..
     *
     */
    public function testTeamBuilderConfigsIdProductGroupsRelFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsCountGet
     *
     * Counts productSizeMaterials of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsDelete
     *
     * Deletes all productSizeMaterials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsFkDelete
     *
     * Delete a related item by id for productSizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsFkGet
     *
     * Find a related item by id for productSizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsFkPut
     *
     * Update a related item by id for productSizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsGet
     *
     * Queries productSizeMaterials of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsNkMaterialGet
     *
     * Fetches belongsTo relation material..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsNkMaterialGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsNkPdfColorProfileGet
     *
     * Fetches belongsTo relation pdfColorProfile..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsNkPdfColorProfileGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsNkSizeGet
     *
     * Fetches belongsTo relation size..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsNkSizeGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsNkTeamGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsPost
     *
     * Creates a new instance in productSizeMaterials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelCountGet
     *
     * Counts productSizeMaterialsRel of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelDelete
     *
     * Deletes all productSizeMaterialsRel of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkDelete
     *
     * Remove the productSizeMaterials relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkDelete_0
     *
     * Delete a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkDelete0()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkGet
     *
     * Find a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkHead
     *
     * Check the existence of productSizeMaterials relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkPut
     *
     * Add a related item by id for productSizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelFkPut_0
     *
     * Update a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelFkPut0()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelGet
     *
     * Queries productSizeMaterialsRel of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelNkBuilderConfigGet
     *
     * Fetches belongsTo relation builderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelNkBuilderConfigGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelNkPdfColorProfileGet
     *
     * Fetches belongsTo relation pdfColorProfile..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelNkPdfColorProfileGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelNkProductSizeMaterialGet
     *
     * Fetches belongsTo relation productSizeMaterial..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelNkProductSizeMaterialGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizeMaterialsRelPost
     *
     * Creates a new instance in productSizeMaterialsRel of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizeMaterialsRelPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesCountGet
     *
     * Counts productSizes of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesDelete
     *
     * Deletes all productSizes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesFkDelete
     *
     * Delete a related item by id for productSizes..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesFkGet
     *
     * Find a related item by id for productSizes..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesFkPut
     *
     * Update a related item by id for productSizes..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesGet
     *
     * Queries productSizes of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsCountGet
     *
     * Counts materials of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsDelete
     *
     * Deletes all materials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsFkDelete
     *
     * Delete a related item by id for materials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsFkGet
     *
     * Find a related item by id for materials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsFkPut
     *
     * Update a related item by id for materials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsGet
     *
     * Queries materials of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsPost
     *
     * Creates a new instance in materials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsRelFkDelete
     *
     * Remove the materials relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsRelFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsRelFkHead
     *
     * Check the existence of materials relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsRelFkHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkMaterialsRelFkPut
     *
     * Add a related item by id for materials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkMaterialsRelFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkPdfColorProfileGet
     *
     * Fetches belongsTo relation pdfColorProfile..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkPdfColorProfileGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsCountGet
     *
     * Counts products of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsDelete
     *
     * Deletes all products of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsFkDelete
     *
     * Delete a related item by id for products..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsFkGet
     *
     * Find a related item by id for products..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsFkPut
     *
     * Update a related item by id for products..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsGet
     *
     * Queries products of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkProductsPost
     *
     * Creates a new instance in products of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkProductsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsCountGet
     *
     * Counts sizeMaterials of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsDelete
     *
     * Deletes all sizeMaterials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsFkDelete
     *
     * Delete a related item by id for sizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsFkGet
     *
     * Find a related item by id for sizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsFkPut
     *
     * Update a related item by id for sizeMaterials..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsGet
     *
     * Queries sizeMaterials of ProductSize..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkSizeMaterialsPost
     *
     * Creates a new instance in sizeMaterials of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkSizeMaterialsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesNkTypeGet
     *
     * Fetches belongsTo relation type..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesNkTypeGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesPost
     *
     * Creates a new instance in productSizes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesRelFkDelete
     *
     * Remove the productSizes relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesRelFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesRelFkHead
     *
     * Check the existence of productSizes relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesRelFkHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductSizesRelFkPut
     *
     * Add a related item by id for productSizes..
     *
     */
    public function testTeamBuilderConfigsIdProductSizesRelFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesCountGet
     *
     * Counts productTypes of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesDelete
     *
     * Deletes all productTypes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesFkDelete
     *
     * Delete a related item by id for productTypes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesFkGet
     *
     * Find a related item by id for productTypes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesFkPut
     *
     * Update a related item by id for productTypes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesGet
     *
     * Queries productTypes of TeamBuilderConfig..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkGroupGet
     *
     * Fetches belongsTo relation group..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkGroupGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesCountGet
     *
     * Counts sizes of ProductType..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesCountGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesDelete
     *
     * Deletes all sizes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesFkDelete
     *
     * Delete a related item by id for sizes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesFkGet
     *
     * Find a related item by id for sizes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesFkGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesFkPut
     *
     * Update a related item by id for sizes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesGet
     *
     * Queries sizes of ProductType..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesNkSizesPost
     *
     * Creates a new instance in sizes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesNkSizesPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesPost
     *
     * Creates a new instance in productTypes of this model..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesRelFkDelete
     *
     * Remove the productTypes relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesRelFkDelete()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesRelFkHead
     *
     * Check the existence of productTypes relation to an item by id..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesRelFkHead()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdProductTypesRelFkPut
     *
     * Add a related item by id for productTypes..
     *
     */
    public function testTeamBuilderConfigsIdProductTypesRelFkPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamBuilderConfigsIdPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamBuilderConfigsIdReplacePost()
    {

    }

    /**
     * Test case for teamBuilderConfigsIdTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamBuilderConfigsIdTeamGet()
    {

    }

    /**
     * Test case for teamBuilderConfigsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamBuilderConfigsPatch()
    {

    }

    /**
     * Test case for teamBuilderConfigsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamBuilderConfigsPost()
    {

    }

    /**
     * Test case for teamBuilderConfigsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamBuilderConfigsPut()
    {

    }

    /**
     * Test case for teamBuilderConfigsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamBuilderConfigsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for teamBuilderConfigsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testTeamBuilderConfigsUpdatePost()
    {

    }

    /**
     * Test case for teamBuilderConfigsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testTeamBuilderConfigsUpsertWithWherePost()
    {

    }

}
