<?php
/**
 * InvitationTicketApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.6-alpha.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * InvitationTicketApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvitationTicketApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for invitationTicketsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testInvitationTicketsChangeStreamGet()
    {

    }

    /**
     * Test case for invitationTicketsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testInvitationTicketsChangeStreamPost()
    {

    }

    /**
     * Test case for invitationTicketsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testInvitationTicketsCountGet()
    {

    }

    /**
     * Test case for invitationTicketsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testInvitationTicketsFindOneGet()
    {

    }

    /**
     * Test case for invitationTicketsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testInvitationTicketsGet()
    {

    }

    /**
     * Test case for invitationTicketsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testInvitationTicketsIdDelete()
    {

    }

    /**
     * Test case for invitationTicketsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testInvitationTicketsIdExistsGet()
    {

    }

    /**
     * Test case for invitationTicketsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testInvitationTicketsIdGet()
    {

    }

    /**
     * Test case for invitationTicketsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testInvitationTicketsIdHead()
    {

    }

    /**
     * Test case for invitationTicketsIdInviteeGet
     *
     * Fetches belongsTo relation invitee..
     *
     */
    public function testInvitationTicketsIdInviteeGet()
    {

    }

    /**
     * Test case for invitationTicketsIdInviterGet
     *
     * Fetches belongsTo relation inviter..
     *
     */
    public function testInvitationTicketsIdInviterGet()
    {

    }

    /**
     * Test case for invitationTicketsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testInvitationTicketsIdPatch()
    {

    }

    /**
     * Test case for invitationTicketsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testInvitationTicketsIdPut()
    {

    }

    /**
     * Test case for invitationTicketsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testInvitationTicketsIdReplacePost()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetDesignGet
     *
     * Fetches belongsTo relation targetDesign..
     *
     */
    public function testInvitationTicketsIdTargetDesignGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetDesignMemberGet
     *
     * Fetches belongsTo relation targetDesignMember..
     *
     */
    public function testInvitationTicketsIdTargetDesignMemberGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetImageFolderGet
     *
     * Fetches belongsTo relation targetImageFolder..
     *
     */
    public function testInvitationTicketsIdTargetImageFolderGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetImageFolderMemberGet
     *
     * Fetches belongsTo relation targetImageFolderMember..
     *
     */
    public function testInvitationTicketsIdTargetImageFolderMemberGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetPortalGet
     *
     * Fetches belongsTo relation targetPortal..
     *
     */
    public function testInvitationTicketsIdTargetPortalGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetPortalMemberGet
     *
     * Fetches belongsTo relation targetPortalMember..
     *
     */
    public function testInvitationTicketsIdTargetPortalMemberGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetTeamGet
     *
     * Fetches belongsTo relation targetTeam..
     *
     */
    public function testInvitationTicketsIdTargetTeamGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetTeamMemberGet
     *
     * Fetches belongsTo relation targetTeamMember..
     *
     */
    public function testInvitationTicketsIdTargetTeamMemberGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetTemplateGet
     *
     * Fetches belongsTo relation targetTemplate..
     *
     */
    public function testInvitationTicketsIdTargetTemplateGet()
    {

    }

    /**
     * Test case for invitationTicketsIdTargetTemplateMemberGet
     *
     * Fetches belongsTo relation targetTemplateMember..
     *
     */
    public function testInvitationTicketsIdTargetTemplateMemberGet()
    {

    }

    /**
     * Test case for invitationTicketsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testInvitationTicketsPatch()
    {

    }

    /**
     * Test case for invitationTicketsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testInvitationTicketsPost()
    {

    }

    /**
     * Test case for invitationTicketsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testInvitationTicketsPut()
    {

    }

    /**
     * Test case for invitationTicketsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testInvitationTicketsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for invitationTicketsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testInvitationTicketsUpdatePost()
    {

    }

    /**
     * Test case for invitationTicketsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testInvitationTicketsUpsertWithWherePost()
    {

    }

}
