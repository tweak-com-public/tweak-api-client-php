<?php
/**
 * ProductSizeApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.3-alpha.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * ProductSizeApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductSizeApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for productSizesChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testProductSizesChangeStreamGet()
    {

    }

    /**
     * Test case for productSizesChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testProductSizesChangeStreamPost()
    {

    }

    /**
     * Test case for productSizesCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testProductSizesCountGet()
    {

    }

    /**
     * Test case for productSizesFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testProductSizesFindOneGet()
    {

    }

    /**
     * Test case for productSizesGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testProductSizesGet()
    {

    }

    /**
     * Test case for productSizesIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testProductSizesIdDelete()
    {

    }

    /**
     * Test case for productSizesIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductSizesIdExistsGet()
    {

    }

    /**
     * Test case for productSizesIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testProductSizesIdGet()
    {

    }

    /**
     * Test case for productSizesIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductSizesIdHead()
    {

    }

    /**
     * Test case for productSizesIdMaterialsCountGet
     *
     * Counts materials of ProductSize..
     *
     */
    public function testProductSizesIdMaterialsCountGet()
    {

    }

    /**
     * Test case for productSizesIdMaterialsDelete
     *
     * Deletes all materials of this model..
     *
     */
    public function testProductSizesIdMaterialsDelete()
    {

    }

    /**
     * Test case for productSizesIdMaterialsFkDelete
     *
     * Delete a related item by id for materials..
     *
     */
    public function testProductSizesIdMaterialsFkDelete()
    {

    }

    /**
     * Test case for productSizesIdMaterialsFkGet
     *
     * Find a related item by id for materials..
     *
     */
    public function testProductSizesIdMaterialsFkGet()
    {

    }

    /**
     * Test case for productSizesIdMaterialsFkPut
     *
     * Update a related item by id for materials..
     *
     */
    public function testProductSizesIdMaterialsFkPut()
    {

    }

    /**
     * Test case for productSizesIdMaterialsGet
     *
     * Queries materials of ProductSize..
     *
     */
    public function testProductSizesIdMaterialsGet()
    {

    }

    /**
     * Test case for productSizesIdMaterialsPost
     *
     * Creates a new instance in materials of this model..
     *
     */
    public function testProductSizesIdMaterialsPost()
    {

    }

    /**
     * Test case for productSizesIdMaterialsRelFkDelete
     *
     * Remove the materials relation to an item by id..
     *
     */
    public function testProductSizesIdMaterialsRelFkDelete()
    {

    }

    /**
     * Test case for productSizesIdMaterialsRelFkHead
     *
     * Check the existence of materials relation to an item by id..
     *
     */
    public function testProductSizesIdMaterialsRelFkHead()
    {

    }

    /**
     * Test case for productSizesIdMaterialsRelFkPut
     *
     * Add a related item by id for materials..
     *
     */
    public function testProductSizesIdMaterialsRelFkPut()
    {

    }

    /**
     * Test case for productSizesIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductSizesIdPatch()
    {

    }

    /**
     * Test case for productSizesIdProductsCountGet
     *
     * Counts products of ProductSize..
     *
     */
    public function testProductSizesIdProductsCountGet()
    {

    }

    /**
     * Test case for productSizesIdProductsDelete
     *
     * Deletes all products of this model..
     *
     */
    public function testProductSizesIdProductsDelete()
    {

    }

    /**
     * Test case for productSizesIdProductsFkDelete
     *
     * Delete a related item by id for products..
     *
     */
    public function testProductSizesIdProductsFkDelete()
    {

    }

    /**
     * Test case for productSizesIdProductsFkGet
     *
     * Find a related item by id for products..
     *
     */
    public function testProductSizesIdProductsFkGet()
    {

    }

    /**
     * Test case for productSizesIdProductsFkPut
     *
     * Update a related item by id for products..
     *
     */
    public function testProductSizesIdProductsFkPut()
    {

    }

    /**
     * Test case for productSizesIdProductsGet
     *
     * Queries products of ProductSize..
     *
     */
    public function testProductSizesIdProductsGet()
    {

    }

    /**
     * Test case for productSizesIdProductsPost
     *
     * Creates a new instance in products of this model..
     *
     */
    public function testProductSizesIdProductsPost()
    {

    }

    /**
     * Test case for productSizesIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductSizesIdPut()
    {

    }

    /**
     * Test case for productSizesIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductSizesIdReplacePost()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsCountGet
     *
     * Counts sizeMaterials of ProductSize..
     *
     */
    public function testProductSizesIdSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsDelete
     *
     * Deletes all sizeMaterials of this model..
     *
     */
    public function testProductSizesIdSizeMaterialsDelete()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsFkDelete
     *
     * Delete a related item by id for sizeMaterials..
     *
     */
    public function testProductSizesIdSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsFkGet
     *
     * Find a related item by id for sizeMaterials..
     *
     */
    public function testProductSizesIdSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsFkPut
     *
     * Update a related item by id for sizeMaterials..
     *
     */
    public function testProductSizesIdSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsGet
     *
     * Queries sizeMaterials of ProductSize..
     *
     */
    public function testProductSizesIdSizeMaterialsGet()
    {

    }

    /**
     * Test case for productSizesIdSizeMaterialsPost
     *
     * Creates a new instance in sizeMaterials of this model..
     *
     */
    public function testProductSizesIdSizeMaterialsPost()
    {

    }

    /**
     * Test case for productSizesIdTypeGet
     *
     * Fetches belongsTo relation type..
     *
     */
    public function testProductSizesIdTypeGet()
    {

    }

    /**
     * Test case for productSizesPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductSizesPatch()
    {

    }

    /**
     * Test case for productSizesPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testProductSizesPost()
    {

    }

    /**
     * Test case for productSizesPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductSizesPut()
    {

    }

    /**
     * Test case for productSizesReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductSizesReplaceOrCreatePost()
    {

    }

    /**
     * Test case for productSizesUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testProductSizesUpdatePost()
    {

    }

    /**
     * Test case for productSizesUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testProductSizesUpsertWithWherePost()
    {

    }

}
