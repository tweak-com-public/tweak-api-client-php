<?php
/**
 * ProductGroupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.4-alpha.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * ProductGroupApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductGroupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for productGroupsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testProductGroupsChangeStreamGet()
    {

    }

    /**
     * Test case for productGroupsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testProductGroupsChangeStreamPost()
    {

    }

    /**
     * Test case for productGroupsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testProductGroupsCountGet()
    {

    }

    /**
     * Test case for productGroupsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testProductGroupsFindOneGet()
    {

    }

    /**
     * Test case for productGroupsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testProductGroupsGet()
    {

    }

    /**
     * Test case for productGroupsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testProductGroupsIdDelete()
    {

    }

    /**
     * Test case for productGroupsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductGroupsIdExistsGet()
    {

    }

    /**
     * Test case for productGroupsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testProductGroupsIdGet()
    {

    }

    /**
     * Test case for productGroupsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductGroupsIdHead()
    {

    }

    /**
     * Test case for productGroupsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductGroupsIdPatch()
    {

    }

    /**
     * Test case for productGroupsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductGroupsIdPut()
    {

    }

    /**
     * Test case for productGroupsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductGroupsIdReplacePost()
    {

    }

    /**
     * Test case for productGroupsIdTypesCountGet
     *
     * Counts types of ProductGroup..
     *
     */
    public function testProductGroupsIdTypesCountGet()
    {

    }

    /**
     * Test case for productGroupsIdTypesDelete
     *
     * Deletes all types of this model..
     *
     */
    public function testProductGroupsIdTypesDelete()
    {

    }

    /**
     * Test case for productGroupsIdTypesFkDelete
     *
     * Delete a related item by id for types..
     *
     */
    public function testProductGroupsIdTypesFkDelete()
    {

    }

    /**
     * Test case for productGroupsIdTypesFkGet
     *
     * Find a related item by id for types..
     *
     */
    public function testProductGroupsIdTypesFkGet()
    {

    }

    /**
     * Test case for productGroupsIdTypesFkPut
     *
     * Update a related item by id for types..
     *
     */
    public function testProductGroupsIdTypesFkPut()
    {

    }

    /**
     * Test case for productGroupsIdTypesGet
     *
     * Queries types of ProductGroup..
     *
     */
    public function testProductGroupsIdTypesGet()
    {

    }

    /**
     * Test case for productGroupsIdTypesPost
     *
     * Creates a new instance in types of this model..
     *
     */
    public function testProductGroupsIdTypesPost()
    {

    }

    /**
     * Test case for productGroupsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductGroupsPatch()
    {

    }

    /**
     * Test case for productGroupsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testProductGroupsPost()
    {

    }

    /**
     * Test case for productGroupsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductGroupsPut()
    {

    }

    /**
     * Test case for productGroupsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductGroupsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for productGroupsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testProductGroupsUpdatePost()
    {

    }

    /**
     * Test case for productGroupsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testProductGroupsUpsertWithWherePost()
    {

    }

}
