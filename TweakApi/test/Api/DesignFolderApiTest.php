<?php
/**
 * DesignFolderApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.2-alpha.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * DesignFolderApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DesignFolderApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for designFoldersChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testDesignFoldersChangeStreamGet()
    {

    }

    /**
     * Test case for designFoldersChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testDesignFoldersChangeStreamPost()
    {

    }

    /**
     * Test case for designFoldersCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testDesignFoldersCountGet()
    {

    }

    /**
     * Test case for designFoldersFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testDesignFoldersFindOneGet()
    {

    }

    /**
     * Test case for designFoldersGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testDesignFoldersGet()
    {

    }

    /**
     * Test case for designFoldersIdChildrenCountGet
     *
     * Counts children of DesignFolder..
     *
     */
    public function testDesignFoldersIdChildrenCountGet()
    {

    }

    /**
     * Test case for designFoldersIdChildrenDelete
     *
     * Deletes all children of this model..
     *
     */
    public function testDesignFoldersIdChildrenDelete()
    {

    }

    /**
     * Test case for designFoldersIdChildrenFkDelete
     *
     * Delete a related item by id for children..
     *
     */
    public function testDesignFoldersIdChildrenFkDelete()
    {

    }

    /**
     * Test case for designFoldersIdChildrenFkGet
     *
     * Find a related item by id for children..
     *
     */
    public function testDesignFoldersIdChildrenFkGet()
    {

    }

    /**
     * Test case for designFoldersIdChildrenFkPut
     *
     * Update a related item by id for children..
     *
     */
    public function testDesignFoldersIdChildrenFkPut()
    {

    }

    /**
     * Test case for designFoldersIdChildrenGet
     *
     * Queries children of DesignFolder..
     *
     */
    public function testDesignFoldersIdChildrenGet()
    {

    }

    /**
     * Test case for designFoldersIdChildrenPost
     *
     * Creates a new instance in children of this model..
     *
     */
    public function testDesignFoldersIdChildrenPost()
    {

    }

    /**
     * Test case for designFoldersIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testDesignFoldersIdDelete()
    {

    }

    /**
     * Test case for designFoldersIdDesignsCountGet
     *
     * Counts designs of DesignFolder..
     *
     */
    public function testDesignFoldersIdDesignsCountGet()
    {

    }

    /**
     * Test case for designFoldersIdDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testDesignFoldersIdDesignsDelete()
    {

    }

    /**
     * Test case for designFoldersIdDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testDesignFoldersIdDesignsFkDelete()
    {

    }

    /**
     * Test case for designFoldersIdDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testDesignFoldersIdDesignsFkGet()
    {

    }

    /**
     * Test case for designFoldersIdDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testDesignFoldersIdDesignsFkPut()
    {

    }

    /**
     * Test case for designFoldersIdDesignsGet
     *
     * Queries designs of DesignFolder..
     *
     */
    public function testDesignFoldersIdDesignsGet()
    {

    }

    /**
     * Test case for designFoldersIdDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testDesignFoldersIdDesignsPost()
    {

    }

    /**
     * Test case for designFoldersIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDesignFoldersIdExistsGet()
    {

    }

    /**
     * Test case for designFoldersIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testDesignFoldersIdGet()
    {

    }

    /**
     * Test case for designFoldersIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDesignFoldersIdHead()
    {

    }

    /**
     * Test case for designFoldersIdMemberGet
     *
     * Fetches belongsTo relation member..
     *
     */
    public function testDesignFoldersIdMemberGet()
    {

    }

    /**
     * Test case for designFoldersIdParentGet
     *
     * Fetches belongsTo relation parent..
     *
     */
    public function testDesignFoldersIdParentGet()
    {

    }

    /**
     * Test case for designFoldersIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignFoldersIdPatch()
    {

    }

    /**
     * Test case for designFoldersIdPortalGet
     *
     * Fetches belongsTo relation portal..
     *
     */
    public function testDesignFoldersIdPortalGet()
    {

    }

    /**
     * Test case for designFoldersIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignFoldersIdPut()
    {

    }

    /**
     * Test case for designFoldersIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignFoldersIdReplacePost()
    {

    }

    /**
     * Test case for designFoldersPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignFoldersPatch()
    {

    }

    /**
     * Test case for designFoldersPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testDesignFoldersPost()
    {

    }

    /**
     * Test case for designFoldersPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignFoldersPut()
    {

    }

    /**
     * Test case for designFoldersReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignFoldersReplaceOrCreatePost()
    {

    }

    /**
     * Test case for designFoldersUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testDesignFoldersUpdatePost()
    {

    }

    /**
     * Test case for designFoldersUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testDesignFoldersUpsertWithWherePost()
    {

    }

}
