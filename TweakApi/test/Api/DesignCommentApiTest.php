<?php
/**
 * DesignCommentApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 0.0.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * DesignCommentApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DesignCommentApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for designCommentsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testDesignCommentsChangeStreamGet()
    {

    }

    /**
     * Test case for designCommentsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testDesignCommentsChangeStreamPost()
    {

    }

    /**
     * Test case for designCommentsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testDesignCommentsCountGet()
    {

    }

    /**
     * Test case for designCommentsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testDesignCommentsFindOneGet()
    {

    }

    /**
     * Test case for designCommentsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testDesignCommentsGet()
    {

    }

    /**
     * Test case for designCommentsIdCommenterGet
     *
     * Fetches belongsTo relation commenter..
     *
     */
    public function testDesignCommentsIdCommenterGet()
    {

    }

    /**
     * Test case for designCommentsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testDesignCommentsIdDelete()
    {

    }

    /**
     * Test case for designCommentsIdDesignGet
     *
     * Fetches belongsTo relation design..
     *
     */
    public function testDesignCommentsIdDesignGet()
    {

    }

    /**
     * Test case for designCommentsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDesignCommentsIdExistsGet()
    {

    }

    /**
     * Test case for designCommentsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testDesignCommentsIdGet()
    {

    }

    /**
     * Test case for designCommentsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDesignCommentsIdHead()
    {

    }

    /**
     * Test case for designCommentsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignCommentsIdPatch()
    {

    }

    /**
     * Test case for designCommentsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignCommentsIdPut()
    {

    }

    /**
     * Test case for designCommentsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDesignCommentsIdReplacePost()
    {

    }

    /**
     * Test case for designCommentsIdRepliesCountGet
     *
     * Counts replies of DesignComment..
     *
     */
    public function testDesignCommentsIdRepliesCountGet()
    {

    }

    /**
     * Test case for designCommentsIdRepliesDelete
     *
     * Deletes all replies of this model..
     *
     */
    public function testDesignCommentsIdRepliesDelete()
    {

    }

    /**
     * Test case for designCommentsIdRepliesFkDelete
     *
     * Delete a related item by id for replies..
     *
     */
    public function testDesignCommentsIdRepliesFkDelete()
    {

    }

    /**
     * Test case for designCommentsIdRepliesFkGet
     *
     * Find a related item by id for replies..
     *
     */
    public function testDesignCommentsIdRepliesFkGet()
    {

    }

    /**
     * Test case for designCommentsIdRepliesFkPut
     *
     * Update a related item by id for replies..
     *
     */
    public function testDesignCommentsIdRepliesFkPut()
    {

    }

    /**
     * Test case for designCommentsIdRepliesGet
     *
     * Queries replies of DesignComment..
     *
     */
    public function testDesignCommentsIdRepliesGet()
    {

    }

    /**
     * Test case for designCommentsIdRepliesPost
     *
     * Creates a new instance in replies of this model..
     *
     */
    public function testDesignCommentsIdRepliesPost()
    {

    }

    /**
     * Test case for designCommentsIdReplyOfGet
     *
     * Fetches belongsTo relation replyOf..
     *
     */
    public function testDesignCommentsIdReplyOfGet()
    {

    }

    /**
     * Test case for designCommentsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignCommentsPatch()
    {

    }

    /**
     * Test case for designCommentsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testDesignCommentsPost()
    {

    }

    /**
     * Test case for designCommentsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignCommentsPut()
    {

    }

    /**
     * Test case for designCommentsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDesignCommentsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for designCommentsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testDesignCommentsUpdatePost()
    {

    }

    /**
     * Test case for designCommentsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testDesignCommentsUpsertWithWherePost()
    {

    }

}
