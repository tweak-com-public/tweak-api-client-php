<?php
/**
 * ImageFolderApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.2-alpha.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * ImageFolderApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ImageFolderApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for imageFoldersChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testImageFoldersChangeStreamGet()
    {

    }

    /**
     * Test case for imageFoldersChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testImageFoldersChangeStreamPost()
    {

    }

    /**
     * Test case for imageFoldersCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testImageFoldersCountGet()
    {

    }

    /**
     * Test case for imageFoldersFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testImageFoldersFindOneGet()
    {

    }

    /**
     * Test case for imageFoldersGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testImageFoldersGet()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenCountGet
     *
     * Counts children of ImageFolder..
     *
     */
    public function testImageFoldersIdChildrenCountGet()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenDelete
     *
     * Deletes all children of this model..
     *
     */
    public function testImageFoldersIdChildrenDelete()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenFkDelete
     *
     * Delete a related item by id for children..
     *
     */
    public function testImageFoldersIdChildrenFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenFkGet
     *
     * Find a related item by id for children..
     *
     */
    public function testImageFoldersIdChildrenFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenFkPut
     *
     * Update a related item by id for children..
     *
     */
    public function testImageFoldersIdChildrenFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenGet
     *
     * Queries children of ImageFolder..
     *
     */
    public function testImageFoldersIdChildrenGet()
    {

    }

    /**
     * Test case for imageFoldersIdChildrenPost
     *
     * Creates a new instance in children of this model..
     *
     */
    public function testImageFoldersIdChildrenPost()
    {

    }

    /**
     * Test case for imageFoldersIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testImageFoldersIdDelete()
    {

    }

    /**
     * Test case for imageFoldersIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testImageFoldersIdExistsGet()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersCountGet
     *
     * Counts folderMembers of ImageFolder..
     *
     */
    public function testImageFoldersIdFolderMembersCountGet()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersDelete
     *
     * Deletes all folderMembers of this model..
     *
     */
    public function testImageFoldersIdFolderMembersDelete()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersFkDelete
     *
     * Delete a related item by id for folderMembers..
     *
     */
    public function testImageFoldersIdFolderMembersFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersFkGet
     *
     * Find a related item by id for folderMembers..
     *
     */
    public function testImageFoldersIdFolderMembersFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersFkPut
     *
     * Update a related item by id for folderMembers..
     *
     */
    public function testImageFoldersIdFolderMembersFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersGet
     *
     * Queries folderMembers of ImageFolder..
     *
     */
    public function testImageFoldersIdFolderMembersGet()
    {

    }

    /**
     * Test case for imageFoldersIdFolderMembersPost
     *
     * Creates a new instance in folderMembers of this model..
     *
     */
    public function testImageFoldersIdFolderMembersPost()
    {

    }

    /**
     * Test case for imageFoldersIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testImageFoldersIdGet()
    {

    }

    /**
     * Test case for imageFoldersIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testImageFoldersIdHead()
    {

    }

    /**
     * Test case for imageFoldersIdImagesCountGet
     *
     * Counts images of ImageFolder..
     *
     */
    public function testImageFoldersIdImagesCountGet()
    {

    }

    /**
     * Test case for imageFoldersIdImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testImageFoldersIdImagesDelete()
    {

    }

    /**
     * Test case for imageFoldersIdImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testImageFoldersIdImagesFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testImageFoldersIdImagesFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testImageFoldersIdImagesFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdImagesGet
     *
     * Queries images of ImageFolder..
     *
     */
    public function testImageFoldersIdImagesGet()
    {

    }

    /**
     * Test case for imageFoldersIdImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testImageFoldersIdImagesPost()
    {

    }

    /**
     * Test case for imageFoldersIdInvitationTicketsFkDelete
     *
     * Delete InvitationTickets for this ImageFolder.
     *
     */
    public function testImageFoldersIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdInvitationTicketsFkGet
     *
     * Get InvitationTicket by Id for this ImageFolder.
     *
     */
    public function testImageFoldersIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdInvitationTicketsGet
     *
     * List InvitationTickets for this ImageFolder.
     *
     */
    public function testImageFoldersIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for imageFoldersIdMembersCountGet
     *
     * Counts members of ImageFolder..
     *
     */
    public function testImageFoldersIdMembersCountGet()
    {

    }

    /**
     * Test case for imageFoldersIdMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testImageFoldersIdMembersDelete()
    {

    }

    /**
     * Test case for imageFoldersIdMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testImageFoldersIdMembersFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testImageFoldersIdMembersFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testImageFoldersIdMembersFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdMembersGet
     *
     * Queries members of ImageFolder..
     *
     */
    public function testImageFoldersIdMembersGet()
    {

    }

    /**
     * Test case for imageFoldersIdMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testImageFoldersIdMembersPost()
    {

    }

    /**
     * Test case for imageFoldersIdMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testImageFoldersIdMembersRelFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testImageFoldersIdMembersRelFkHead()
    {

    }

    /**
     * Test case for imageFoldersIdMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testImageFoldersIdMembersRelFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdParentGet
     *
     * Fetches belongsTo relation parent..
     *
     */
    public function testImageFoldersIdParentGet()
    {

    }

    /**
     * Test case for imageFoldersIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testImageFoldersIdPatch()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsCountGet
     *
     * Counts portals of ImageFolder..
     *
     */
    public function testImageFoldersIdPortalsCountGet()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testImageFoldersIdPortalsDelete()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testImageFoldersIdPortalsFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testImageFoldersIdPortalsFkGet()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testImageFoldersIdPortalsFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsGet
     *
     * Queries portals of ImageFolder..
     *
     */
    public function testImageFoldersIdPortalsGet()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testImageFoldersIdPortalsPost()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testImageFoldersIdPortalsRelFkDelete()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testImageFoldersIdPortalsRelFkHead()
    {

    }

    /**
     * Test case for imageFoldersIdPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testImageFoldersIdPortalsRelFkPut()
    {

    }

    /**
     * Test case for imageFoldersIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testImageFoldersIdPut()
    {

    }

    /**
     * Test case for imageFoldersIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testImageFoldersIdReplacePost()
    {

    }

    /**
     * Test case for imageFoldersIdTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testImageFoldersIdTeamGet()
    {

    }

    /**
     * Test case for imageFoldersPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testImageFoldersPatch()
    {

    }

    /**
     * Test case for imageFoldersPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testImageFoldersPost()
    {

    }

    /**
     * Test case for imageFoldersPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testImageFoldersPut()
    {

    }

    /**
     * Test case for imageFoldersReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testImageFoldersReplaceOrCreatePost()
    {

    }

    /**
     * Test case for imageFoldersUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testImageFoldersUpdatePost()
    {

    }

    /**
     * Test case for imageFoldersUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testImageFoldersUpsertWithWherePost()
    {

    }

}
