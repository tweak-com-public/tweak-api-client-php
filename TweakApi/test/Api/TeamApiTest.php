<?php
/**
 * TeamApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * TeamApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TeamApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for teamsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testTeamsChangeStreamGet()
    {

    }

    /**
     * Test case for teamsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testTeamsChangeStreamPost()
    {

    }

    /**
     * Test case for teamsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testTeamsCountGet()
    {

    }

    /**
     * Test case for teamsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testTeamsFindOneGet()
    {

    }

    /**
     * Test case for teamsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamsGet()
    {

    }

    /**
     * Test case for teamsIdBrandDelete
     *
     * Deletes brand of this model..
     *
     */
    public function testTeamsIdBrandDelete()
    {

    }

    /**
     * Test case for teamsIdBrandGet
     *
     * Fetches hasOne relation brand..
     *
     */
    public function testTeamsIdBrandGet()
    {

    }

    /**
     * Test case for teamsIdBrandPost
     *
     * Creates a new instance in brand of this model..
     *
     */
    public function testTeamsIdBrandPost()
    {

    }

    /**
     * Test case for teamsIdBrandPut
     *
     * Update brand of this model..
     *
     */
    public function testTeamsIdBrandPut()
    {

    }

    /**
     * Test case for teamsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testTeamsIdDelete()
    {

    }

    /**
     * Test case for teamsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamsIdExistsGet()
    {

    }

    /**
     * Test case for teamsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testTeamsIdGet()
    {

    }

    /**
     * Test case for teamsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamsIdHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersCountGet
     *
     * Counts imageFolders of Team..
     *
     */
    public function testTeamsIdImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamsIdImageFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersGet
     *
     * Queries imageFolders of Team..
     *
     */
    public function testTeamsIdImageFoldersGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenCountGet
     *
     * Counts children of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenDelete
     *
     * Deletes all children of this model..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkDelete
     *
     * Delete a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkGet
     *
     * Find a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkPut
     *
     * Update a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenGet
     *
     * Queries children of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenPost
     *
     * Creates a new instance in children of this model..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesCountGet
     *
     * Counts images of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkImagesCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testTeamsIdImageFoldersNkImagesDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesGet
     *
     * Queries images of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkImagesGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testTeamsIdImageFoldersNkImagesPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersCountGet
     *
     * Counts members of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdImageFoldersNkMembersDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersGet
     *
     * Queries members of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkMembersGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdImageFoldersNkMembersPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkParentGet
     *
     * Fetches belongsTo relation parent..
     *
     */
    public function testTeamsIdImageFoldersNkParentGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsCountGet
     *
     * Counts portals of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsGet
     *
     * Queries portals of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdImageFoldersNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamsIdImageFoldersPost()
    {

    }

    /**
     * Test case for teamsIdImagesCountGet
     *
     * Counts images of Team..
     *
     */
    public function testTeamsIdImagesCountGet()
    {

    }

    /**
     * Test case for teamsIdImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testTeamsIdImagesDelete()
    {

    }

    /**
     * Test case for teamsIdImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkDelete()
    {

    }

    /**
     * Test case for teamsIdImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkGet()
    {

    }

    /**
     * Test case for teamsIdImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkPut()
    {

    }

    /**
     * Test case for teamsIdImagesGet
     *
     * Queries images of Team..
     *
     */
    public function testTeamsIdImagesGet()
    {

    }

    /**
     * Test case for teamsIdImagesNkFolderGet
     *
     * Fetches belongsTo relation folder..
     *
     */
    public function testTeamsIdImagesNkFolderGet()
    {

    }

    /**
     * Test case for teamsIdImagesNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdImagesNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testTeamsIdImagesPost()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsFkDelete
     *
     * Delete InvitationTickets for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsFkGet
     *
     * Get InvitationTicket by Id for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsGet
     *
     * List InvitationTickets for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for teamsIdMembersCountGet
     *
     * Counts members of Team..
     *
     */
    public function testTeamsIdMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdMembersDelete()
    {

    }

    /**
     * Test case for teamsIdMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdMembersGet
     *
     * Queries members of Team..
     *
     */
    public function testTeamsIdMembersGet()
    {

    }

    /**
     * Test case for teamsIdMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdMembersPost()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdPatch()
    {

    }

    /**
     * Test case for teamsIdPortalsCountGet
     *
     * Counts portals of Team..
     *
     */
    public function testTeamsIdPortalsCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamsIdPortalsDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsGet
     *
     * Queries portals of Team..
     *
     */
    public function testTeamsIdPortalsGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersCountGet
     *
     * Counts designFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersDelete
     *
     * Deletes all designFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkDelete
     *
     * Delete a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkGet
     *
     * Find a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkPut
     *
     * Update a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersGet
     *
     * Queries designFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersPost
     *
     * Creates a new instance in designFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsCountGet
     *
     * Counts designs of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignsCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignsDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsGet
     *
     * Queries designs of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignsGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignsPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersCountGet
     *
     * Counts imageFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersGet
     *
     * Queries imageFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkDelete
     *
     * Remove the imageFolders relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkHead
     *
     * Check the existence of imageFolders relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkPut
     *
     * Add a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersCountGet
     *
     * Counts members of Portal..
     *
     */
    public function testTeamsIdPortalsNkMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdPortalsNkMembersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersGet
     *
     * Queries members of Portal..
     *
     */
    public function testTeamsIdPortalsNkMembersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdPortalsNkMembersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testTeamsIdPortalsNkPermissionGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdPortalsNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersCountGet
     *
     * Counts templateFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersGet
     *
     * Queries templateFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesCountGet
     *
     * Counts templates of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplatesCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplatesDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesGet
     *
     * Queries templates of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplatesGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplatesPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkDelete
     *
     * Remove the templates relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkHead
     *
     * Check the existence of templates relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkPut
     *
     * Add a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamsIdPortalsPost()
    {

    }

    /**
     * Test case for teamsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdPut()
    {

    }

    /**
     * Test case for teamsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdReplacePost()
    {

    }

    /**
     * Test case for teamsIdTeamMembersCountGet
     *
     * Counts teamMembers of Team..
     *
     */
    public function testTeamsIdTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersDelete
     *
     * Deletes all teamMembers of this model..
     *
     */
    public function testTeamsIdTeamMembersDelete()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkDelete
     *
     * Delete a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkGet
     *
     * Find a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkPut
     *
     * Update a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdTeamMembersGet
     *
     * Queries teamMembers of Team..
     *
     */
    public function testTeamsIdTeamMembersGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersPost
     *
     * Creates a new instance in teamMembers of this model..
     *
     */
    public function testTeamsIdTeamMembersPost()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersCountGet
     *
     * Counts templateFolders of Team..
     *
     */
    public function testTeamsIdTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testTeamsIdTemplateFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersGet
     *
     * Queries templateFolders of Team..
     *
     */
    public function testTeamsIdTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testTeamsIdTemplateFoldersPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesCountGet
     *
     * Counts templates of Team..
     *
     */
    public function testTeamsIdTemplatesCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamsIdTemplatesDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesGet
     *
     * Queries templates of Team..
     *
     */
    public function testTeamsIdTemplatesGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamsIdTemplatesPost()
    {

    }

    /**
     * Test case for teamsIdWorkflowsCountGet
     *
     * Counts workflows of Team..
     *
     */
    public function testTeamsIdWorkflowsCountGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsDelete
     *
     * Deletes all workflows of this model..
     *
     */
    public function testTeamsIdWorkflowsDelete()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkDelete
     *
     * Delete a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkDelete()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkGet
     *
     * Find a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkPut
     *
     * Update a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkPut()
    {

    }

    /**
     * Test case for teamsIdWorkflowsGet
     *
     * Queries workflows of Team..
     *
     */
    public function testTeamsIdWorkflowsGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsPost
     *
     * Creates a new instance in workflows of this model..
     *
     */
    public function testTeamsIdWorkflowsPost()
    {

    }

    /**
     * Test case for teamsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsPatch()
    {

    }

    /**
     * Test case for teamsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamsPost()
    {

    }

    /**
     * Test case for teamsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsPut()
    {

    }

    /**
     * Test case for teamsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for teamsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testTeamsUpdatePost()
    {

    }

    /**
     * Test case for teamsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testTeamsUpsertWithWherePost()
    {

    }

}
