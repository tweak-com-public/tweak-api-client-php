<?php
/**
 * TeamApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.4-alpha.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Tweak\Api;

use \Tweak\Api\Configuration;
use \Tweak\Api\ApiClient;
use \Tweak\Api\ApiException;
use \Tweak\Api\ObjectSerializer;

/**
 * TeamApiTest Class Doc Comment
 *
 * @category Class
 * @package  Tweak\Api
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TeamApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for teamsChangeStreamGet
     *
     * Create a change stream..
     *
     */
    public function testTeamsChangeStreamGet()
    {

    }

    /**
     * Test case for teamsChangeStreamPost
     *
     * Create a change stream..
     *
     */
    public function testTeamsChangeStreamPost()
    {

    }

    /**
     * Test case for teamsCountGet
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testTeamsCountGet()
    {

    }

    /**
     * Test case for teamsFindOneGet
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testTeamsFindOneGet()
    {

    }

    /**
     * Test case for teamsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamsGet()
    {

    }

    /**
     * Test case for teamsIdAuthResetKeysDelete
     *
     * Reset Team keys.
     *
     */
    public function testTeamsIdAuthResetKeysDelete()
    {

    }

    /**
     * Test case for teamsIdBrandDelete
     *
     * Deletes brand of this model..
     *
     */
    public function testTeamsIdBrandDelete()
    {

    }

    /**
     * Test case for teamsIdBrandGet
     *
     * Fetches hasOne relation brand..
     *
     */
    public function testTeamsIdBrandGet()
    {

    }

    /**
     * Test case for teamsIdBrandPost
     *
     * Creates a new instance in brand of this model..
     *
     */
    public function testTeamsIdBrandPost()
    {

    }

    /**
     * Test case for teamsIdBrandPut
     *
     * Update brand of this model..
     *
     */
    public function testTeamsIdBrandPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsCountGet
     *
     * Counts builderConfigs of Team..
     *
     */
    public function testTeamsIdBuilderConfigsCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsDefaultGet
     *
     * Get default TeamBuilderConfig.
     *
     */
    public function testTeamsIdBuilderConfigsDefaultGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsDelete
     *
     * Deletes all builderConfigs of this model..
     *
     */
    public function testTeamsIdBuilderConfigsDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsFkDelete
     *
     * Delete a related item by id for builderConfigs..
     *
     */
    public function testTeamsIdBuilderConfigsFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsFkGet
     *
     * Find a related item by id for builderConfigs..
     *
     */
    public function testTeamsIdBuilderConfigsFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsFkLogoPut
     *
     * Change Builder Config logo.
     *
     */
    public function testTeamsIdBuilderConfigsFkLogoPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsFkPut
     *
     * Update a related item by id for builderConfigs..
     *
     */
    public function testTeamsIdBuilderConfigsFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsFkWatermarkPut
     *
     * Change Builder Config watermark.
     *
     */
    public function testTeamsIdBuilderConfigsFkWatermarkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsGet
     *
     * Queries builderConfigs of Team..
     *
     */
    public function testTeamsIdBuilderConfigsGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsCountGet
     *
     * Counts productGroups of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsDelete
     *
     * Deletes all productGroups of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsFkDelete
     *
     * Delete a related item by id for productGroups..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsFkGet
     *
     * Find a related item by id for productGroups..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsFkPut
     *
     * Update a related item by id for productGroups..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsGet
     *
     * Queries productGroups of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsPost
     *
     * Creates a new instance in productGroups of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsPost()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsRelFkDelete
     *
     * Remove the productGroups relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsRelFkHead
     *
     * Check the existence of productGroups relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductGroupsRelFkPut
     *
     * Add a related item by id for productGroups..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductGroupsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsCountGet
     *
     * Counts productSizeMaterials of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsDelete
     *
     * Deletes all productSizeMaterials of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsFkDelete
     *
     * Delete a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsFkGet
     *
     * Find a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsFkPut
     *
     * Update a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsGet
     *
     * Queries productSizeMaterials of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsPost
     *
     * Creates a new instance in productSizeMaterials of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsPost()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelCountGet
     *
     * Counts productSizeMaterialsRel of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelDelete
     *
     * Deletes all productSizeMaterialsRel of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkDelete
     *
     * Remove the productSizeMaterials relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkDelete_0
     *
     * Delete a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkDelete0()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkGet
     *
     * Find a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkHead
     *
     * Check the existence of productSizeMaterials relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkPut
     *
     * Add a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelFkPut_0
     *
     * Update a related item by id for productSizeMaterialsRel..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelFkPut0()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelGet
     *
     * Queries productSizeMaterialsRel of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizeMaterialsRelPost
     *
     * Creates a new instance in productSizeMaterialsRel of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizeMaterialsRelPost()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesCountGet
     *
     * Counts productSizes of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesDelete
     *
     * Deletes all productSizes of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesFkDelete
     *
     * Delete a related item by id for productSizes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesFkGet
     *
     * Find a related item by id for productSizes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesFkPut
     *
     * Update a related item by id for productSizes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesGet
     *
     * Queries productSizes of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesPost
     *
     * Creates a new instance in productSizes of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesPost()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesRelFkDelete
     *
     * Remove the productSizes relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesRelFkHead
     *
     * Check the existence of productSizes relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesRelFkHead()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductSizesRelFkPut
     *
     * Add a related item by id for productSizes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductSizesRelFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesCountGet
     *
     * Counts productTypes of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesCountGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesDelete
     *
     * Deletes all productTypes of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesFkDelete
     *
     * Delete a related item by id for productTypes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesFkGet
     *
     * Find a related item by id for productTypes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesFkGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesFkPut
     *
     * Update a related item by id for productTypes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesGet
     *
     * Queries productTypes of TeamBuilderConfig..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesPost
     *
     * Creates a new instance in productTypes of this model..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesPost()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesRelFkDelete
     *
     * Remove the productTypes relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesRelFkHead
     *
     * Check the existence of productTypes relation to an item by id..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesRelFkHead()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkProductTypesRelFkPut
     *
     * Add a related item by id for productTypes..
     *
     */
    public function testTeamsIdBuilderConfigsNkProductTypesRelFkPut()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdBuilderConfigsNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdBuilderConfigsPost
     *
     * Creates a new instance in builderConfigs of this model..
     *
     */
    public function testTeamsIdBuilderConfigsPost()
    {

    }

    /**
     * Test case for teamsIdDataSourcesCountGet
     *
     * Counts dataSources of Team..
     *
     */
    public function testTeamsIdDataSourcesCountGet()
    {

    }

    /**
     * Test case for teamsIdDataSourcesDelete
     *
     * Deletes all dataSources of this model..
     *
     */
    public function testTeamsIdDataSourcesDelete()
    {

    }

    /**
     * Test case for teamsIdDataSourcesFkDelete
     *
     * Delete a related item by id for dataSources..
     *
     */
    public function testTeamsIdDataSourcesFkDelete()
    {

    }

    /**
     * Test case for teamsIdDataSourcesFkGet
     *
     * Find a related item by id for dataSources..
     *
     */
    public function testTeamsIdDataSourcesFkGet()
    {

    }

    /**
     * Test case for teamsIdDataSourcesFkPut
     *
     * Update a related item by id for dataSources..
     *
     */
    public function testTeamsIdDataSourcesFkPut()
    {

    }

    /**
     * Test case for teamsIdDataSourcesGet
     *
     * Queries dataSources of Team..
     *
     */
    public function testTeamsIdDataSourcesGet()
    {

    }

    /**
     * Test case for teamsIdDataSourcesPost
     *
     * Creates a new instance in dataSources of this model..
     *
     */
    public function testTeamsIdDataSourcesPost()
    {

    }

    /**
     * Test case for teamsIdDelete
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testTeamsIdDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasCountGet
     *
     * Counts dynamicDatas of Team..
     *
     */
    public function testTeamsIdDynamicDatasCountGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasDelete
     *
     * Deletes all dynamicDatas of this model..
     *
     */
    public function testTeamsIdDynamicDatasDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasFkDelete
     *
     * Delete a related item by id for dynamicDatas..
     *
     */
    public function testTeamsIdDynamicDatasFkDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasFkGet
     *
     * Find a related item by id for dynamicDatas..
     *
     */
    public function testTeamsIdDynamicDatasFkGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasFkPut
     *
     * Update a related item by id for dynamicDatas..
     *
     */
    public function testTeamsIdDynamicDatasFkPut()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasGet
     *
     * Queries dynamicDatas of Team..
     *
     */
    public function testTeamsIdDynamicDatasGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsCountGet
     *
     * Counts designs of DynamicData..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsCountGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsFkDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsFkGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsFkPut()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsGet
     *
     * Queries designs of DynamicData..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testTeamsIdDynamicDatasNkDesignsPost()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsCountGet
     *
     * Count Dynamic Data records.
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsCountGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsDelete
     *
     * Delete all matching records..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsFkDelete
     *
     * Delete a model instance by {{fk}} from the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsFkDelete()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsFkGet
     *
     * Find a model instance by {{fk}} from the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsFkGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsFkPropertyNameUploadPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsFkPropertyNameUploadPut()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsFkPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsFkPut()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsMigratePost
     *
     * Request migration for Dynamic Data records.
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsMigratePost()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsPost()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkRecordsUploadCsvPost
     *
     * Upload CSV for this Dynamic Data.
     *
     */
    public function testTeamsIdDynamicDatasNkRecordsUploadCsvPost()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdDynamicDatasNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdDynamicDatasPost
     *
     * Creates a new instance in dynamicDatas of this model..
     *
     */
    public function testTeamsIdDynamicDatasPost()
    {

    }

    /**
     * Test case for teamsIdExistsGet
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamsIdExistsGet()
    {

    }

    /**
     * Test case for teamsIdGet
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testTeamsIdGet()
    {

    }

    /**
     * Test case for teamsIdHead
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testTeamsIdHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersCountGet
     *
     * Counts imageFolders of Team..
     *
     */
    public function testTeamsIdImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamsIdImageFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamsIdImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersGet
     *
     * Queries imageFolders of Team..
     *
     */
    public function testTeamsIdImageFoldersGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenCountGet
     *
     * Counts children of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenDelete
     *
     * Deletes all children of this model..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkDelete
     *
     * Delete a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkGet
     *
     * Find a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenFkPut
     *
     * Update a related item by id for children..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenGet
     *
     * Queries children of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkChildrenPost
     *
     * Creates a new instance in children of this model..
     *
     */
    public function testTeamsIdImageFoldersNkChildrenPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersCountGet
     *
     * Counts folderMembers of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersDelete
     *
     * Deletes all folderMembers of this model..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersFkDelete
     *
     * Delete a related item by id for folderMembers..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersFkGet
     *
     * Find a related item by id for folderMembers..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersFkPut
     *
     * Update a related item by id for folderMembers..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersGet
     *
     * Queries folderMembers of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkFolderMembersPost
     *
     * Creates a new instance in folderMembers of this model..
     *
     */
    public function testTeamsIdImageFoldersNkFolderMembersPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesCountGet
     *
     * Counts images of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkImagesCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testTeamsIdImageFoldersNkImagesDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testTeamsIdImageFoldersNkImagesFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesGet
     *
     * Queries images of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkImagesGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testTeamsIdImageFoldersNkImagesPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersCountGet
     *
     * Counts members of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdImageFoldersNkMembersDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersGet
     *
     * Queries members of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkMembersGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdImageFoldersNkMembersPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdImageFoldersNkMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkParentGet
     *
     * Fetches belongsTo relation parent..
     *
     */
    public function testTeamsIdImageFoldersNkParentGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsCountGet
     *
     * Counts portals of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsCountGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsGet
     *
     * Queries portals of ImageFolder..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsPost()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testTeamsIdImageFoldersNkPortalsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdImageFoldersNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdImageFoldersNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamsIdImageFoldersPost()
    {

    }

    /**
     * Test case for teamsIdImagesCountGet
     *
     * Counts images of Team..
     *
     */
    public function testTeamsIdImagesCountGet()
    {

    }

    /**
     * Test case for teamsIdImagesDelete
     *
     * Deletes all images of this model..
     *
     */
    public function testTeamsIdImagesDelete()
    {

    }

    /**
     * Test case for teamsIdImagesFkDelete
     *
     * Delete a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkDelete()
    {

    }

    /**
     * Test case for teamsIdImagesFkGet
     *
     * Find a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkGet()
    {

    }

    /**
     * Test case for teamsIdImagesFkPut
     *
     * Update a related item by id for images..
     *
     */
    public function testTeamsIdImagesFkPut()
    {

    }

    /**
     * Test case for teamsIdImagesGet
     *
     * Queries images of Team..
     *
     */
    public function testTeamsIdImagesGet()
    {

    }

    /**
     * Test case for teamsIdImagesNkFolderGet
     *
     * Fetches belongsTo relation folder..
     *
     */
    public function testTeamsIdImagesNkFolderGet()
    {

    }

    /**
     * Test case for teamsIdImagesNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdImagesNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdImagesPost
     *
     * Creates a new instance in images of this model..
     *
     */
    public function testTeamsIdImagesPost()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsFkDelete
     *
     * Delete InvitationTickets for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsFkDelete()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsFkGet
     *
     * Get InvitationTicket by Id for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsFkGet()
    {

    }

    /**
     * Test case for teamsIdInvitationTicketsGet
     *
     * List InvitationTickets for this Team.
     *
     */
    public function testTeamsIdInvitationTicketsGet()
    {

    }

    /**
     * Test case for teamsIdLogoPut
     *
     * Change logo.
     *
     */
    public function testTeamsIdLogoPut()
    {

    }

    /**
     * Test case for teamsIdMembersCountGet
     *
     * Counts members of Team..
     *
     */
    public function testTeamsIdMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdMembersDelete()
    {

    }

    /**
     * Test case for teamsIdMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdMembersGet
     *
     * Queries members of Team..
     *
     */
    public function testTeamsIdMembersGet()
    {

    }

    /**
     * Test case for teamsIdMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdMembersPost()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPatch
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdPatch()
    {

    }

    /**
     * Test case for teamsIdPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testTeamsIdPermissionDelete()
    {

    }

    /**
     * Test case for teamsIdPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testTeamsIdPermissionGet()
    {

    }

    /**
     * Test case for teamsIdPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testTeamsIdPermissionPost()
    {

    }

    /**
     * Test case for teamsIdPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testTeamsIdPermissionPut()
    {

    }

    /**
     * Test case for teamsIdPortalsCountGet
     *
     * Counts portals of Team..
     *
     */
    public function testTeamsIdPortalsCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamsIdPortalsDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamsIdPortalsFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsGet
     *
     * Queries portals of Team..
     *
     */
    public function testTeamsIdPortalsGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersCountGet
     *
     * Counts designFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersDelete
     *
     * Deletes all designFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkDelete
     *
     * Delete a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkGet
     *
     * Find a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersFkPut
     *
     * Update a related item by id for designFolders..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersGet
     *
     * Queries designFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignFoldersPost
     *
     * Creates a new instance in designFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsCountGet
     *
     * Counts designs of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignsCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignsDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testTeamsIdPortalsNkDesignsFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsGet
     *
     * Queries designs of Portal..
     *
     */
    public function testTeamsIdPortalsNkDesignsGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testTeamsIdPortalsNkDesignsPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersCountGet
     *
     * Counts imageFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersDelete
     *
     * Deletes all imageFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkDelete
     *
     * Delete a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkGet
     *
     * Find a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersFkPut
     *
     * Update a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersGet
     *
     * Queries imageFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersPost
     *
     * Creates a new instance in imageFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkDelete
     *
     * Remove the imageFolders relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkHead
     *
     * Check the existence of imageFolders relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkImageFoldersRelFkPut
     *
     * Add a related item by id for imageFolders..
     *
     */
    public function testTeamsIdPortalsNkImageFoldersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersCountGet
     *
     * Counts members of Portal..
     *
     */
    public function testTeamsIdPortalsNkMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdPortalsNkMembersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersGet
     *
     * Queries members of Portal..
     *
     */
    public function testTeamsIdPortalsNkMembersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdPortalsNkMembersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdPortalsNkMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testTeamsIdPortalsNkPermissionGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testTeamsIdPortalsNkPermissionPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersCountGet
     *
     * Counts portalMembers of Portal..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersDelete
     *
     * Deletes all portalMembers of this model..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersFkDelete
     *
     * Delete a related item by id for portalMembers..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersFkGet
     *
     * Find a related item by id for portalMembers..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersFkPut
     *
     * Update a related item by id for portalMembers..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersGet
     *
     * Queries portalMembers of Portal..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkPortalMembersPost
     *
     * Creates a new instance in portalMembers of this model..
     *
     */
    public function testTeamsIdPortalsNkPortalMembersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdPortalsNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersCountGet
     *
     * Counts templateFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersGet
     *
     * Queries templateFolders of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateFoldersPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsCountGet
     *
     * Counts templateRels of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsDelete
     *
     * Deletes all templateRels of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsFkDelete
     *
     * Delete a related item by id for templateRels..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsFkGet
     *
     * Find a related item by id for templateRels..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsFkPut
     *
     * Update a related item by id for templateRels..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsGet
     *
     * Queries templateRels of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplateRelsPost
     *
     * Creates a new instance in templateRels of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplateRelsPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesCountGet
     *
     * Counts templates of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplatesCountGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplatesDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesGet
     *
     * Queries templates of Portal..
     *
     */
    public function testTeamsIdPortalsNkTemplatesGet()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamsIdPortalsNkTemplatesPost()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkDelete
     *
     * Remove the templates relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkHead
     *
     * Check the existence of templates relation to an item by id..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkHead()
    {

    }

    /**
     * Test case for teamsIdPortalsNkTemplatesRelFkPut
     *
     * Add a related item by id for templates..
     *
     */
    public function testTeamsIdPortalsNkTemplatesRelFkPut()
    {

    }

    /**
     * Test case for teamsIdPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamsIdPortalsPost()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsCountGet
     *
     * Counts productMaterials of Team..
     *
     */
    public function testTeamsIdProductMaterialsCountGet()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsDelete
     *
     * Deletes all productMaterials of this model..
     *
     */
    public function testTeamsIdProductMaterialsDelete()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsFkDelete
     *
     * Delete a related item by id for productMaterials..
     *
     */
    public function testTeamsIdProductMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsFkGet
     *
     * Find a related item by id for productMaterials..
     *
     */
    public function testTeamsIdProductMaterialsFkGet()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsFkPut
     *
     * Update a related item by id for productMaterials..
     *
     */
    public function testTeamsIdProductMaterialsFkPut()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsGet
     *
     * Queries productMaterials of Team..
     *
     */
    public function testTeamsIdProductMaterialsGet()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdProductMaterialsNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdProductMaterialsPost
     *
     * Creates a new instance in productMaterials of this model..
     *
     */
    public function testTeamsIdProductMaterialsPost()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesAvailableGet
     *
     * Find all available PdfColorProfile.
     *
     */
    public function testTeamsIdProductPdfColorProfilesAvailableGet()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesCountGet
     *
     * Counts productPdfColorProfiles of Team..
     *
     */
    public function testTeamsIdProductPdfColorProfilesCountGet()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesDelete
     *
     * Deletes all productPdfColorProfiles of this model..
     *
     */
    public function testTeamsIdProductPdfColorProfilesDelete()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesFkDelete
     *
     * Delete a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamsIdProductPdfColorProfilesFkDelete()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesFkGet
     *
     * Find a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamsIdProductPdfColorProfilesFkGet()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesFkPut
     *
     * Update a related item by id for productPdfColorProfiles..
     *
     */
    public function testTeamsIdProductPdfColorProfilesFkPut()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesGet
     *
     * Queries productPdfColorProfiles of Team..
     *
     */
    public function testTeamsIdProductPdfColorProfilesGet()
    {

    }

    /**
     * Test case for teamsIdProductPdfColorProfilesUploadPost
     *
     * Upload ICC PDF Color Profile for this Team.
     *
     */
    public function testTeamsIdProductPdfColorProfilesUploadPost()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsCountGet
     *
     * Counts productSizeMaterials of Team..
     *
     */
    public function testTeamsIdProductSizeMaterialsCountGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsDelete
     *
     * Deletes all productSizeMaterials of this model..
     *
     */
    public function testTeamsIdProductSizeMaterialsDelete()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsFkDelete
     *
     * Delete a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdProductSizeMaterialsFkDelete()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsFkGet
     *
     * Find a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdProductSizeMaterialsFkGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsFkPut
     *
     * Update a related item by id for productSizeMaterials..
     *
     */
    public function testTeamsIdProductSizeMaterialsFkPut()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsGet
     *
     * Queries productSizeMaterials of Team..
     *
     */
    public function testTeamsIdProductSizeMaterialsGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsNkMaterialGet
     *
     * Fetches belongsTo relation material..
     *
     */
    public function testTeamsIdProductSizeMaterialsNkMaterialGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsNkPdfColorProfileGet
     *
     * Fetches belongsTo relation pdfColorProfile..
     *
     */
    public function testTeamsIdProductSizeMaterialsNkPdfColorProfileGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsNkSizeGet
     *
     * Fetches belongsTo relation size..
     *
     */
    public function testTeamsIdProductSizeMaterialsNkSizeGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdProductSizeMaterialsNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdProductSizeMaterialsPost
     *
     * Creates a new instance in productSizeMaterials of this model..
     *
     */
    public function testTeamsIdProductSizeMaterialsPost()
    {

    }

    /**
     * Test case for teamsIdPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdPut()
    {

    }

    /**
     * Test case for teamsIdReplacePost
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdReplacePost()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsCountGet
     *
     * Counts designs of DynamicData..
     *
     */
    public function testTeamsIdTeamDataDesignsCountGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testTeamsIdTeamDataDesignsDelete()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testTeamsIdTeamDataDesignsFkDelete()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testTeamsIdTeamDataDesignsFkGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testTeamsIdTeamDataDesignsFkPut()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsGet
     *
     * Queries designs of DynamicData..
     *
     */
    public function testTeamsIdTeamDataDesignsGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testTeamsIdTeamDataDesignsPost()
    {

    }

    /**
     * Test case for teamsIdTeamDataGet
     *
     * Fetches belongsTo relation teamData..
     *
     */
    public function testTeamsIdTeamDataGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsCountGet
     *
     * Count Dynamic Data records.
     *
     */
    public function testTeamsIdTeamDataRecordsCountGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsDelete
     *
     * Delete all matching records..
     *
     */
    public function testTeamsIdTeamDataRecordsDelete()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsFkDelete
     *
     * Delete a model instance by {{fk}} from the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsFkDelete()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsFkGet
     *
     * Find a model instance by {{fk}} from the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsFkGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsFkPropertyNameUploadPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsFkPropertyNameUploadPut()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsFkPut
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsFkPut()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsGet
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsGet()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsMigratePost
     *
     * Request migration for Dynamic Data records.
     *
     */
    public function testTeamsIdTeamDataRecordsMigratePost()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamsIdTeamDataRecordsPost()
    {

    }

    /**
     * Test case for teamsIdTeamDataRecordsUploadCsvPost
     *
     * Upload CSV for this Dynamic Data.
     *
     */
    public function testTeamsIdTeamDataRecordsUploadCsvPost()
    {

    }

    /**
     * Test case for teamsIdTeamDataTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdTeamDataTeamGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersCountGet
     *
     * Counts teamMembers of Team..
     *
     */
    public function testTeamsIdTeamMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersDelete
     *
     * Deletes all teamMembers of this model..
     *
     */
    public function testTeamsIdTeamMembersDelete()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkDelete
     *
     * Delete a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkGet
     *
     * Find a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersFkPut
     *
     * Update a related item by id for teamMembers..
     *
     */
    public function testTeamsIdTeamMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdTeamMembersGet
     *
     * Queries teamMembers of Team..
     *
     */
    public function testTeamsIdTeamMembersGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersMapKeysGet
     *
     * Map teamMembers emails to teamMembers keys.
     *
     */
    public function testTeamsIdTeamMembersMapKeysGet()
    {

    }

    /**
     * Test case for teamsIdTeamMembersPost
     *
     * Creates a new instance in teamMembers of this model..
     *
     */
    public function testTeamsIdTeamMembersPost()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersCountGet
     *
     * Counts templateFolders of Team..
     *
     */
    public function testTeamsIdTemplateFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersDelete
     *
     * Deletes all templateFolders of this model..
     *
     */
    public function testTeamsIdTemplateFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkDelete
     *
     * Delete a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkGet
     *
     * Find a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersFkPut
     *
     * Update a related item by id for templateFolders..
     *
     */
    public function testTeamsIdTemplateFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersGet
     *
     * Queries templateFolders of Team..
     *
     */
    public function testTeamsIdTemplateFoldersGet()
    {

    }

    /**
     * Test case for teamsIdTemplateFoldersPost
     *
     * Creates a new instance in templateFolders of this model..
     *
     */
    public function testTeamsIdTemplateFoldersPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesCountGet
     *
     * Counts templates of Team..
     *
     */
    public function testTeamsIdTemplatesCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesDelete
     *
     * Deletes all templates of this model..
     *
     */
    public function testTeamsIdTemplatesDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkDelete
     *
     * Delete a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkGet
     *
     * Find a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesFkPut
     *
     * Update a related item by id for templates..
     *
     */
    public function testTeamsIdTemplatesFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesGet
     *
     * Queries templates of Team..
     *
     */
    public function testTeamsIdTemplatesGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsCountGet
     *
     * Counts designs of Template..
     *
     */
    public function testTeamsIdTemplatesNkDesignsCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsDelete
     *
     * Deletes all designs of this model..
     *
     */
    public function testTeamsIdTemplatesNkDesignsDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsFkDelete
     *
     * Delete a related item by id for designs..
     *
     */
    public function testTeamsIdTemplatesNkDesignsFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsFkGet
     *
     * Find a related item by id for designs..
     *
     */
    public function testTeamsIdTemplatesNkDesignsFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsFkPut
     *
     * Update a related item by id for designs..
     *
     */
    public function testTeamsIdTemplatesNkDesignsFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsGet
     *
     * Queries designs of Template..
     *
     */
    public function testTeamsIdTemplatesNkDesignsGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkDesignsPost
     *
     * Creates a new instance in designs of this model..
     *
     */
    public function testTeamsIdTemplatesNkDesignsPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersCountGet
     *
     * Counts members of Template..
     *
     */
    public function testTeamsIdTemplatesNkMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersDelete
     *
     * Deletes all members of this model..
     *
     */
    public function testTeamsIdTemplatesNkMembersDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersFkDelete
     *
     * Delete a related item by id for members..
     *
     */
    public function testTeamsIdTemplatesNkMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersFkGet
     *
     * Find a related item by id for members..
     *
     */
    public function testTeamsIdTemplatesNkMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersFkPut
     *
     * Update a related item by id for members..
     *
     */
    public function testTeamsIdTemplatesNkMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersGet
     *
     * Queries members of Template..
     *
     */
    public function testTeamsIdTemplatesNkMembersGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersPost
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testTeamsIdTemplatesNkMembersPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersRelFkDelete
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkMembersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersRelFkHead
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkMembersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkMembersRelFkPut
     *
     * Add a related item by id for members..
     *
     */
    public function testTeamsIdTemplatesNkMembersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPermissionDelete
     *
     * Deletes permission of this model..
     *
     */
    public function testTeamsIdTemplatesNkPermissionDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPermissionGet
     *
     * Fetches hasOne relation permission..
     *
     */
    public function testTeamsIdTemplatesNkPermissionGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPermissionPost
     *
     * Creates a new instance in permission of this model..
     *
     */
    public function testTeamsIdTemplatesNkPermissionPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPermissionPut
     *
     * Update permission of this model..
     *
     */
    public function testTeamsIdTemplatesNkPermissionPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersCountGet
     *
     * Counts portalFolders of Template..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersDelete
     *
     * Deletes all portalFolders of this model..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersFkDelete
     *
     * Delete a related item by id for portalFolders..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersFkGet
     *
     * Find a related item by id for portalFolders..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersFkPut
     *
     * Update a related item by id for portalFolders..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersGet
     *
     * Queries portalFolders of Template..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersPost
     *
     * Creates a new instance in portalFolders of this model..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersRelFkDelete
     *
     * Remove the portalFolders relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersRelFkHead
     *
     * Check the existence of portalFolders relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersRelFkHead()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalFoldersRelFkPut
     *
     * Add a related item by id for portalFolders..
     *
     */
    public function testTeamsIdTemplatesNkPortalFoldersRelFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsCountGet
     *
     * Counts portals of Template..
     *
     */
    public function testTeamsIdTemplatesNkPortalsCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsDelete
     *
     * Deletes all portals of this model..
     *
     */
    public function testTeamsIdTemplatesNkPortalsDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsFkDelete
     *
     * Delete a related item by id for portals..
     *
     */
    public function testTeamsIdTemplatesNkPortalsFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsFkGet
     *
     * Find a related item by id for portals..
     *
     */
    public function testTeamsIdTemplatesNkPortalsFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsFkPut
     *
     * Update a related item by id for portals..
     *
     */
    public function testTeamsIdTemplatesNkPortalsFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsGet
     *
     * Queries portals of Template..
     *
     */
    public function testTeamsIdTemplatesNkPortalsGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsPost
     *
     * Creates a new instance in portals of this model..
     *
     */
    public function testTeamsIdTemplatesNkPortalsPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsRelFkDelete
     *
     * Remove the portals relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkPortalsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsRelFkHead
     *
     * Check the existence of portals relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkPortalsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkPortalsRelFkPut
     *
     * Add a related item by id for portals..
     *
     */
    public function testTeamsIdTemplatesNkPortalsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsCountGet
     *
     * Counts tags of Template..
     *
     */
    public function testTeamsIdTemplatesNkTagsCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsDelete
     *
     * Deletes all tags of this model..
     *
     */
    public function testTeamsIdTemplatesNkTagsDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsFkDelete
     *
     * Delete a related item by id for tags..
     *
     */
    public function testTeamsIdTemplatesNkTagsFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsFkGet
     *
     * Find a related item by id for tags..
     *
     */
    public function testTeamsIdTemplatesNkTagsFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsFkPut
     *
     * Update a related item by id for tags..
     *
     */
    public function testTeamsIdTemplatesNkTagsFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsGet
     *
     * Queries tags of Template..
     *
     */
    public function testTeamsIdTemplatesNkTagsGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsPost
     *
     * Creates a new instance in tags of this model..
     *
     */
    public function testTeamsIdTemplatesNkTagsPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsRelFkDelete
     *
     * Remove the tags relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkTagsRelFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsRelFkHead
     *
     * Check the existence of tags relation to an item by id..
     *
     */
    public function testTeamsIdTemplatesNkTagsRelFkHead()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTagsRelFkPut
     *
     * Add a related item by id for tags..
     *
     */
    public function testTeamsIdTemplatesNkTagsRelFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTeamFolderGet
     *
     * Fetches belongsTo relation teamFolder..
     *
     */
    public function testTeamsIdTemplatesNkTeamFolderGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTeamGet
     *
     * Fetches belongsTo relation team..
     *
     */
    public function testTeamsIdTemplatesNkTeamGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersCountGet
     *
     * Counts templateMembers of Template..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersCountGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersDelete
     *
     * Deletes all templateMembers of this model..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersFkDelete
     *
     * Delete a related item by id for templateMembers..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersFkDelete()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersFkGet
     *
     * Find a related item by id for templateMembers..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersFkGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersFkPut
     *
     * Update a related item by id for templateMembers..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersFkPut()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersGet
     *
     * Queries templateMembers of Template..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkTemplateMembersPost
     *
     * Creates a new instance in templateMembers of this model..
     *
     */
    public function testTeamsIdTemplatesNkTemplateMembersPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkUploaderGet
     *
     * Fetches belongsTo relation uploader..
     *
     */
    public function testTeamsIdTemplatesNkUploaderGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesNkWorkflowGet
     *
     * Fetches belongsTo relation workflow..
     *
     */
    public function testTeamsIdTemplatesNkWorkflowGet()
    {

    }

    /**
     * Test case for teamsIdTemplatesPost
     *
     * Creates a new instance in templates of this model..
     *
     */
    public function testTeamsIdTemplatesPost()
    {

    }

    /**
     * Test case for teamsIdTemplatesWithDesignsGet
     *
     * List Templates with Designs for this Team.
     *
     */
    public function testTeamsIdTemplatesWithDesignsGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsCountGet
     *
     * Counts workflows of Team..
     *
     */
    public function testTeamsIdWorkflowsCountGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsDelete
     *
     * Deletes all workflows of this model..
     *
     */
    public function testTeamsIdWorkflowsDelete()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkDelete
     *
     * Delete a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkDelete()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkGet
     *
     * Find a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsFkPut
     *
     * Update a related item by id for workflows..
     *
     */
    public function testTeamsIdWorkflowsFkPut()
    {

    }

    /**
     * Test case for teamsIdWorkflowsGet
     *
     * Queries workflows of Team..
     *
     */
    public function testTeamsIdWorkflowsGet()
    {

    }

    /**
     * Test case for teamsIdWorkflowsPost
     *
     * Creates a new instance in workflows of this model..
     *
     */
    public function testTeamsIdWorkflowsPost()
    {

    }

    /**
     * Test case for teamsNameNameExistsGet
     *
     * Define whether team exists or not.
     *
     */
    public function testTeamsNameNameExistsGet()
    {

    }

    /**
     * Test case for teamsPatch
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsPatch()
    {

    }

    /**
     * Test case for teamsPost
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testTeamsPost()
    {

    }

    /**
     * Test case for teamsPut
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsPut()
    {

    }

    /**
     * Test case for teamsReplaceOrCreatePost
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testTeamsReplaceOrCreatePost()
    {

    }

    /**
     * Test case for teamsSubdomainSubdomainExistsGet
     *
     * Define whether team exists or not.
     *
     */
    public function testTeamsSubdomainSubdomainExistsGet()
    {

    }

    /**
     * Test case for teamsUpdatePost
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testTeamsUpdatePost()
    {

    }

    /**
     * Test case for teamsUpsertWithWherePost
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testTeamsUpsertWithWherePost()
    {

    }

}
